{"version":3,"sources":["images/Menu Button.svg","components/data/WidgetProvider.js","components/navigation/TopNav.js","images/Dashboard.svg","images/charts.svg","images/world.svg","components/navigation/LeftNav.js","components/data/DataProvider.js","components/data/DateCalculator.js","components/map/JSONConverter.js","components/map/LoginMap.js","images/arrow.svg","components/login/WelcomePageOne.js","components/login/Register.js","components/login/Login.js","components/login/LoginChart.js","components/login/WelcomePageTwo.js","components/login/WelcomePageZero.js","components/login/Auth.js","components/charts/TotalCasesDash.js","components/charts/PercentChangeDash.js","components/charts/MovingAverageDash.js","components/charts/DailyReportDash.js","components/dashboard/Dashboard.js","components/charts/GlobalTotalByDate.js","components/selection/CountrySelection.js","components/selection/StateSelection.js","components/selection/CountySelection.js","components/selection/AllSelections.js","components/charts/TotalCasesSelect.js","components/charts/PercentChangeSelect.js","components/charts/MovingAverageSelect.js","components/charts/DailyReport.js","components/charts/ChartList.js","components/map/GlobalMap.js","components/map/USMap.js","components/map/MapList.js","MainContentView.js","ApplicationView.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","stroke","strokeWidth","fill","fillRule","transform","x","y","width","height","rx","_ref","svgRef","title","props","viewBox","ref","undefined","ForwardRef","forwardRef","WidgetsContext","React","createContext","WidgetProvider","useState","widgets","setWidgets","showDelete","setShowDelete","getWidgets","fetch","then","r","json","useEffect","Provider","value","addWidget","widget","method","headers","body","JSON","stringify","removeWidget","widgetId","toggleShowDelete","children","TopNav","toggleNav","activeView","useContext","className","onClick","toUpperCase","d","points","cx","cy","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","style","enableBackground","xmlSpace","LeftNav","setActiveView","DataContext","DataProvider","timeSeriesGlobal","setTimeSeriesGlobal","timeSeriesUSA","setTimeSeriesUSA","dailyReport","setDailyReport","getData","resp","text","d3","getDailyReport","date","DateContext","DateProvider","allDateArray","setAllDates","distanceNumberString","formatDistanceStrict","subDays","Date","unit","split","distanceNumber","parseInt","allDates","day","format","addDays","push","calculateAllDates","JSONContext","CreateJSON","unformattedEnd","slice","end","start","formatDate","deconstructedGlobal","forEach","datum","map","globalData","fields","name","type","rows","USAData","setUSAData","deconstructedUSA","setDeconstructedUSA","deconstructed","latest","reducers","combineReducers","keplerGl","keplerGLReducer","store","createStore","applyMiddleware","taskMiddleware","LoginMap","Map","dispatch","useDispatch","config","addDataToMap","datasets","info","label","data","option","centerMap","readOnly","mapboxApiAccessToken","window","innerWidth","innerHeight","WelcomePageOne","togglePage","controls","useAnimation","scale","transition","duration","loop","Infinity","div","animate","onMouseOver","stop","onMouseLeave","Register","useRef","email","password","verifyPassword","onSubmit","e","preventDefault","current","_","user","result","createdUser","sessionStorage","setItem","toggleLogin","alert","TextField","inputRef","placeholder","required","Button","Login","exists","autoFocus","LoginChart","cases","arrayOfTotalsForEachDay","total","prov","totalForDate","dataForNoSelection","v","obj","findData","dayNumber","old","newCases","newCasesArray","values","period","sma","arr","avg","reduce","accumulator","currValue","movingAverage","barRatio","dependentAxis","tickCount","tickFormat","n","mToK","shortenNumber","WelcomePageTwo","WelcomePageZero","appear","useSpring","opacity","from","delay","Auth","page","setPage","components","setComponents","setTimeout","showPageZero","showPageOne","showPageTwo","animation","TotalCasesDash","country","state","county","countrySelected","stateSelected","countySelected","countyObject","filter","find","countyTotalsArray","dataForThisSelection","countyListArray","stateTotalsArray","count","provinceObject","provinceTotalsArray","arrayOfCountriesThatBelongToOtherCountries","place","provinceListArray","includes","countryObject","c","countryTotalsArray","VictoryZoomVoronoiContainer","createContainer","mostRecent","toString","replace","chartDescription","containerComponent","responsive","labels","PercentChangeDash","change","percentChange","Math","abs","toFixed","MovingAverageDash","zoomDimension","colorScale","orientation","DailyReportDash","dateSelected","setDateSelected","options","setOptions","datesReversed","reverse","onChange","event","newDate","columns","dataSource","dataIndex","sorter","a","b","defaultSortOrder","render","round","Dashboard","currentUser","getItem","usersWidgets","o","userId","statistic","GlobalTotalByDate","arrayOfOptions","generateOptions","yesterday","selectedDate","setDate","CountrySelection","setCountrySelected","setStateSelected","setCountySelected","allCountriesArrayWithDuplicates","allCountriesArray","Array","Set","sort","defaultValue","StateSelection","australiaStatesArray","region","canadaProvincesArray","recoveredIndex","splice","chinaProvincesArray","usStatesWithDuplicates","usaStatesArray","handleStateChange","province","CountySelection","countiesForState","AllSelections","TotalCasesSelect","graph","PercentChangeSelect","MovingAverageSelect","DailyReport","ChartList","showGlobalTotalByDate","showTotalCasesSelect","showPercentChangeSelect","showMovingAverageSelect","showDailyReport","mode","Item","GlobalMap","USAMap","console","log","MapList","setMap","showWorld","showUS","MainContent","check","update","showDashboard","showCharts","showMaps","showAuth","ApplicationView","showLeftNav","setShowLeftNav","leftNav","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6f6d7816.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Menu Button\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Wireframes\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"User's-Dashboard--LeftNavOpen\",\n  transform: \"translate(-79.000000, -35.000000)\",\n  fill: \"#F47E17\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"TopNav\",\n  transform: \"translate(79.000000, 15.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Menu-Button\",\n  transform: \"translate(0.000000, 20.000000)\"\n}, /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle-Copy-2\",\n  x: 0,\n  y: 12,\n  width: 42,\n  height: 4,\n  rx: 2\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle-Copy\",\n  x: 0,\n  y: 0,\n  width: 42,\n  height: 4,\n  rx: 2\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  id: \"Rectangle-Copy-3\",\n  x: 0,\n  y: 24,\n  width: 42,\n  height: 4,\n  rx: 2\n})))));\n\nvar SvgMenuButton = function SvgMenuButton(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"42px\",\n    height: \"28px\",\n    viewBox: \"0 0 42 28\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgMenuButton, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Menu Button.974b22a2.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react'\n\nexport const WidgetsContext = React.createContext()\n\nexport const WidgetProvider = (props) => {\n    const [widgets, setWidgets] = useState([])\n\n    const [showDelete, setShowDelete] = useState(false)\n\n    const toggleShowDelete = () => {\n        setShowDelete(!showDelete)\n    }\n\n    const getWidgets = () => {\n        return fetch('https://custom-covid19-tracker-api.herokuapp.com/widgets')\n            .then(r => r.json())\n            .then(setWidgets)\n    }\n\n    const addWidget = widget => {\n        return fetch('https://custom-covid19-tracker-api.herokuapp.com/widgets', {\n            method:'POST',\n            headers:{\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(widget)\n        })\n            .then(getWidgets)\n    }\n\n    const removeWidget = widgetId => {\n        return fetch(`https://custom-covid19-tracker-api.herokuapp.com/widgets/${widgetId}`, {\n            method: \"DELETE\"\n        })\n            .then(getWidgets)\n    }\n\n    useEffect(() => {\n        getWidgets()\n    }, [])\n\n    return (\n        <WidgetsContext.Provider value={{\n            widgets, addWidget, removeWidget, showDelete, toggleShowDelete\n        }}>\n            {props.children}\n        </WidgetsContext.Provider>\n    )\n}","import React, { useContext } from 'react'\nimport './Navigation.css'\nimport { ReactComponent as MenuButton } from '../../images/Menu Button.svg'\nimport { WidgetsContext } from '../data/WidgetProvider'\n\nconst TopNav = ({ toggleNav, activeView }) => {\n    const { toggleShowDelete } = useContext(WidgetsContext)\n\n\n    return (\n        <header className=\"topNav\">\n            <div className='box'>\n                <div className=\"menuButtonContainer\"><MenuButton className=\"menuButton\" onClick={toggleNav} /></div>\n            </div>\n            <div className='pageName'>{activeView.toUpperCase()}</div>\n            {activeView === 'dashboard' ? <div className='modify' onClick={toggleShowDelete}>Modify Dashboard</div> : <div className='modify'></div>}\n        </header>\n    )\n}\n\nexport default TopNav","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"dashboard\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Wireframes\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"User's-Dashboard--LeftNavOpen\",\n  transform: \"translate(-15.000000, -141.000000)\",\n  fill: \"#F47E17\",\n  fillRule: \"nonzero\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"LeftNav\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"dashboard\",\n  transform: \"translate(15.000000, 141.000000)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M53.2903226,0 L2.70967742,0 C1.21574194,0 0,1.21574194 0,2.70967742 L0,38.8387097 C0,40.3326452 1.21574194,41.5483871 2.70967742,41.5483871 L27.0967742,41.5483871 C27.0967742,49.5166452 33.580129,56 41.5483871,56 C49.5166452,56 56,49.5166452 56,41.5483871 L56,2.70967742 C56,1.21574194 54.7842581,0 53.2903226,0 Z M2.70967742,1.80645161 L53.2903226,1.80645161 C53.788,1.80645161 54.1935484,2.212 54.1935484,2.70967742 L54.1935484,7.22580645 L1.80645161,7.22580645 L1.80645161,2.70967742 C1.80645161,2.212 2.212,1.80645161 2.70967742,1.80645161 Z M40.6451613,41.1744516 L32.0030968,49.8165161 C30.0774194,47.5972903 28.9032258,44.7105806 28.9032258,41.5483871 C28.9032258,34.8807742 34.0940645,29.4153548 40.6451613,28.9492903 L40.6451613,41.1744516 Z M33.2802581,51.0936774 L41.5483871,42.8255484 L49.8165161,51.0936774 C47.5972903,53.0193548 44.7105806,54.1935484 41.5483871,54.1935484 C38.3861935,54.1935484 35.4994839,53.0193548 33.2802581,51.0936774 Z M51.0936774,49.8165161 L42.4516129,41.1744516 L42.4516129,28.9492903 C49.0027097,29.4153548 54.1935484,34.8807742 54.1935484,41.5483871 C54.1935484,44.7105806 53.0193548,47.5972903 51.0936774,49.8165161 Z M41.5483871,27.0967742 C34.1925161,27.0967742 28.1156129,32.6245161 27.2223226,39.7419355 L2.70967742,39.7419355 C2.212,39.7419355 1.80645161,39.3363871 1.80645161,38.8387097 L1.80645161,9.03225806 L54.1935484,9.03225806 L54.1935484,34.5673548 C51.7268387,30.1180645 46.9858065,27.0967742 41.5483871,27.0967742 Z\",\n  id: \"Shape\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32.9413287,41 C32.9413287,37.1416573 35.8436152,33.7153866 40,32.666811 L39.4719586,31 C34.4837144,32.2589835 31,36.3710278 31,41 L32.9413287,41 Z\",\n  id: \"Path\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M31,44.2851532 C31.110306,44.8711705 31.2785829,45.4477612 31.5,46 L33,45.4281225 C32.81562,44.9685782 32.6763285,44.487824 32.5837359,44 L31,44.2851532 Z\",\n  id: \"Path\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50.5208333,39 L52,38.5605243 C51.8402778,38.0239013 51.6296296,37.4988435 51.3742284,37 L50,37.7016191 C50.212963,38.1171935 50.3881173,38.5543562 50.5208333,39 L50.5208333,39 Z\",\n  id: \"Path\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50.0554205,41.1897106 C50.0554205,41.4175471 50.0466699,41.6426275 50.0291687,41.8658705 L51.9688867,42 C51.9893048,41.7326596 52,41.4616445 52,41.1897106 C52,40.7919155 51.9776373,40.392283 51.932912,40 L50,40.1966008 C50.0359747,40.5227377 50.0554205,40.8543868 50.0554205,41.1897106 L50.0554205,41.1897106 Z\",\n  id: \"Path\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50,45.3359436 L51.4200627,46 C51.661442,45.4839468 51.8565831,44.9436179 52,44.3938919 L50.4827586,44 C50.3636364,44.4573218 50.2014107,44.9068128 50,45.3359436 Z\",\n  id: \"Path\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"7 4 9 4 9 6 7 6\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"4 4 6 4 6 6 4 6\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"11 4 13 4 13 6 11 6\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.3,11 L6.7,11 C5.2114,11 4,12.2498571 4,13.7857143 L4,21.2142857 C4,22.7501429 5.2114,24 6.7,24 L19.3,24 C20.7886,24 22,22.7501429 22,21.2142857 L22,13.7857143 C22,12.2498571 20.7886,11 19.3,11 Z M20.2,21.2142857 C20.2,21.7259286 19.7959,22.1428571 19.3,22.1428571 L6.7,22.1428571 C6.2041,22.1428571 5.8,21.7259286 5.8,21.2142857 L5.8,13.7857143 C5.8,13.2740714 6.2041,12.8571429 6.7,12.8571429 L19.3,12.8571429 C19.7959,12.8571429 20.2,13.2740714 20.2,13.7857143 L20.2,21.2142857 Z\",\n  id: \"Shape\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.3,25 L6.7,25 C5.2114,25 4,26.2498571 4,27.7857143 L4,35.2142857 C4,36.7501429 5.2114,38 6.7,38 L19.3,38 C20.7886,38 22,36.7501429 22,35.2142857 L22,27.7857143 C22,26.2498571 20.7886,25 19.3,25 Z M20.2,35.2142857 C20.2,35.7259286 19.7959,36.1428571 19.3,36.1428571 L6.7,36.1428571 C6.2041,36.1428571 5.8,35.7259286 5.8,35.2142857 L5.8,27.7857143 C5.8,27.2740714 6.2041,26.8571429 6.7,26.8571429 L19.3,26.8571429 C19.7959,26.8571429 20.2,27.2740714 20.2,27.7857143 L20.2,35.2142857 Z\",\n  id: \"Shape\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"13.4691367 18.0532776 10.5617266 15.2207985 6 19.6649582 7.37035933 21 10.5617266 17.8908821 13.4691367 20.7233612 19 15.3350418 17.6296407 14\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"15.3333333 28 13.6666667 28 13.6666667 32 12 32 12 30 10.3333333 30 10.3333333 32 8.66666667 32 8.66666667 28 7 28 7 34 17 34 17 32 15.3333333 32\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"25 13 52 13 52 15 25 15\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"25 16 31 16 31 18 25 18\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"32 16 52 16 52 18 32 18\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"25 20 42 20 42 22 25 22\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"43 20 45 20 45 22 43 22\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"47 20 49 20 49 22 47 22\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"50 20 52 20 52 22 50 22\"\n})))));\n\nvar SvgDashboard = function SvgDashboard(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 56 56\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDashboard, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Dashboard.92987886.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"graph\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Wireframes\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"User's-Dashboard--LeftNavOpen\",\n  transform: \"translate(-15.000000, -421.000000)\",\n  fill: \"#F47E17\",\n  fillRule: \"nonzero\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"LeftNav\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"graph\",\n  transform: \"translate(15.000000, 421.000000)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M1.15992293,56 L12.7591522,56 C13.3994297,56 13.9190751,55.4779376 13.9190751,54.8346821 L13.9190751,10.5526012 C13.9190751,9.90934566 13.3994297,9.38728324 12.7591522,9.38728324 L1.15992293,9.38728324 C0.519645472,9.38728324 0,9.90934566 0,10.5526012 L0,26.867052 C0,27.5103075 0.519645472,28.0323699 1.15992293,28.0323699 C1.80020039,28.0323699 2.31984586,27.5103075 2.31984586,26.867052 L2.31984586,11.7179191 L11.5992293,11.7179191 L11.5992293,46.6774566 L2.31984586,46.6774566 L2.31984586,33.8589595 C2.31984586,33.215704 1.80020039,32.6936416 1.15992293,32.6936416 C0.519645472,32.6936416 0,33.215704 0,33.8589595 L0,54.8346821 C0,55.4779376 0.519645472,56 1.15992293,56 Z M2.31984586,49.0080925 L11.5992293,49.0080925 L11.5992293,53.6693642 L2.31984586,53.6693642 L2.31984586,49.0080925 Z\",\n  id: \"Shape\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M54.8400771,18.7745665 L43.2408478,18.7745665 C42.6005703,18.7745665 42.0809249,19.2957225 42.0809249,19.9378613 L42.0809249,31.5708092 C42.0809249,32.212948 42.6005703,32.734104 43.2408478,32.734104 C43.8811252,32.734104 44.4007707,32.212948 44.4007707,31.5708092 L44.4007707,21.1011561 L53.6801541,21.1011561 L53.6801541,46.6936416 L44.4007707,46.6936416 L44.4007707,38.550578 C44.4007707,37.9084393 43.8811252,37.3872832 43.2408478,37.3872832 C42.6005703,37.3872832 42.0809249,37.9084393 42.0809249,38.550578 L42.0809249,54.8367052 C42.0809249,55.4788439 42.6005703,56 43.2408478,56 L54.8400771,56 C55.4803545,56 56,55.4788439 56,54.8367052 L56,19.9378613 C56,19.2957225 55.4803545,18.7745665 54.8400771,18.7745665 Z M53.6801541,53.6734104 L44.4007707,53.6734104 L44.4007707,49.0202312 L53.6801541,49.0202312 L53.6801541,53.6734104 Z\",\n  id: \"Shape\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.0404624,54.8333333 C21.0404624,55.4773333 21.5601079,56 22.2003854,56 L33.7996146,56 C34.4398921,56 34.9595376,55.4773333 34.9595376,54.8333333 L34.9595376,1.16666667 C34.9595376,0.522666667 34.4398921,0 33.7996146,0 L22.2003854,0 C21.5601079,0 21.0404624,0.522666667 21.0404624,1.16666667 L21.0404624,22.1666667 C21.0404624,22.8106667 21.5601079,23.3333333 22.2003854,23.3333333 C22.8406628,23.3333333 23.3603083,22.8106667 23.3603083,22.1666667 L23.3603083,2.33333333 L32.6396917,2.33333333 L32.6396917,46.6666667 L23.3603083,46.6666667 L23.3603083,29.1666667 C23.3603083,28.5226667 22.8406628,28 22.2003854,28 C21.5601079,28 21.0404624,28.5226667 21.0404624,29.1666667 L21.0404624,54.8333333 Z M23.3603083,49 L32.6396917,49 L32.6396917,53.6666667 L23.3603083,53.6666667 L23.3603083,49 Z\",\n  id: \"Shape\"\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Oval\",\n  cx: 43.2138728,\n  cy: 35.1213873,\n  r: 1.13294798\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Oval\",\n  cx: 22.1734104,\n  cy: 25.734104,\n  r: 1.13294798\n}), /*#__PURE__*/React.createElement(\"circle\", {\n  id: \"Oval\",\n  cx: 1.13294798,\n  cy: 30.265896,\n  r: 1.13294798\n})))));\n\nvar SvgCharts = function SvgCharts(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 56 56\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCharts, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/charts.9f6b6109.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M387.664,464.017c-2.77-4.774-8.887-6.4-13.667-3.63l-0.385,0.222c-4.776,2.771-6.401,8.89-3.631,13.667 c1.855,3.197,5.21,4.983,8.658,4.983c1.702,0,3.43-0.437,5.009-1.353l0.385-0.222 C388.809,474.913,390.434,468.794,387.664,464.017z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M477.694,128.08C443.512,68.875,388.321,26.526,322.287,8.832C256.255-8.862,187.283,0.219,128.078,34.4 C68.874,68.581,26.524,123.773,8.831,189.806c-17.693,66.033-8.613,135.006,25.568,194.21 c30.661,53.107,79.393,93.468,137.219,113.646c27.411,9.564,56.026,14.337,84.597,14.337c31.065,0,62.074-5.646,91.385-16.911 c5.155-1.981,7.727-7.766,5.745-12.921s-7.768-7.73-12.921-5.745c-78.02,29.987-162.482,16.362-225.585-31.004l8.959-46.765 l4.317-1.402c16.313-5.3,25.273-22.884,19.975-39.198l-3.168-9.749c-0.733-2.256-0.729-4.641,0.01-6.895 c2.779-8.472,1.786-17.741-2.725-25.433c-4.511-7.691-12.116-13.084-20.867-14.795l-22.57-4.41l-43.548-33.11 c-2.609-1.984-6.024-2.563-9.142-1.551l-25.496,8.282c-0.541-9.119-0.549-18.235-0.035-27.303 c1.006,0.937,1.661,1.574,2.064,1.992c0.499,0.831,1.117,1.593,1.841,2.253c2.082,1.896,3.968,2.756,7.928,2.756 c3.639-0.001,9.026-0.726,17.921-2.04c8.436-1.247,16.828-2.652,16.911-2.666c3.363-0.563,6.206-2.803,7.544-5.938 c1.338-3.136,0.985-6.737-0.936-9.555l-12.261-17.984l17.562-12.558c1.17-0.837,2.146-1.916,2.861-3.164l27.223-47.525 l10.973-11.758c11.213-12.018,14.413-29.601,8.151-44.797c-3.694-8.963-10.146-16.425-18.216-21.454 c8.74-6.871,18.059-13.215,27.963-18.932c36.338-20.98,75.994-31.147,115.233-31.536l-17.856,22.399L169.24,65.795 c-2.689,0.942-4.849,2.988-5.935,5.622l-18.492,44.828c-1.313,3.185-0.896,6.819,1.105,9.623l27.008,37.832 c-3.868,3.529-7.633,8.669-12.13,15.051c-1.972,2.799-3.834,5.442-5.121,6.924c-1.119,1.29-2.239,2.55-3.349,3.798 c-5.809,6.535-11.815,13.294-16.082,22.322c-9.382,19.859-7.487,42.941,4.945,60.239c12.021,16.725,31.839,25.227,52.991,22.739 c3.446-0.404,6.659-1.199,9.768-1.969c8.573-2.121,11.289-2.333,14.039,0.241c1.338,1.253,1.461,1.49,1.434,5.739 c-0.019,2.704-0.04,6.068,0.892,9.909c1.493,6.145,5.352,10.392,8.452,13.804c1.541,1.695,3.135,3.449,3.626,4.626 c3.119,7.474,1.761,11.613-1.215,20.683c-0.255,0.776-0.515,1.568-0.776,2.38c-4.521,13.995,1.781,27.877,7.341,40.123 c1.806,3.977,3.511,7.731,4.628,11.049c8.991,26.679,15.731,32.789,21.14,35.249c2.833,1.288,5.765,1.853,8.727,1.852 c14.415-0.001,29.457-13.385,36.367-21.87c4.34-5.328,5.409-10.663,6.189-14.56c0.389-1.938,0.695-3.468,1.279-4.468 c0.894-1.53,1.947-2.716,3.28-4.218c2.681-3.019,6.018-6.775,8.179-13.584c1.642-5.172,2.835-6.44,6.786-10.648 c0.688-0.731,1.421-1.513,2.208-2.369c13.319-14.493,9.889-25.564,6.256-37.286c-3.057-9.863,2.29-16.171,15.218-28.21 c5.604-5.219,11.398-10.615,15.877-17.099c1.96-2.838,7.923-11.471,4.233-20.028c-3.617-8.39-12.81-9.8-20.196-10.932 c-2.917-0.448-7.325-1.124-8.728-2.041c-6.187-4.045-9.972-12.487-13.633-20.652c-0.729-1.625-1.448-3.229-2.177-4.786 c-1.3-2.778-2.599-6.139-3.974-9.697c-3.638-9.416-7.761-20.089-14.78-27.529c-6.309-6.685-18.202-9.905-28.695-12.747 c-3.529-0.955-6.86-1.857-9.057-2.668c-1.841-0.68-3.839-0.803-5.745-0.355c-5.107,1.197-8.293,2.516-10.659,4.412 c-0.625,0.501-2.476,2.146-3.56,4.79c-3.661-1.757-8.695-5.112-11.793-7.177c-0.064-0.043-0.129-0.086-0.193-0.129 c1.044-4.178,0.099-7.531-0.891-9.625c-5.586-11.816-24.129-10.891-27.787-10.58c-2.078,0.174-4.707,0.267-7.488,0.365 c-4.368,0.155-9.196,0.329-13.973,0.865l0.246-0.686c3.626-10.103,13.274-16.891,24.008-16.891h5.685 c5.521,0,9.999-4.478,9.999-9.999c0-5.521-4.478-9.999-9.999-9.999h-5.685c-15.936,0-30.529,8.387-38.708,21.588l-14.915-20.893 l14.674-35.569L244.787,60.5c1.774-0.622,3.338-1.732,4.511-3.203l28.763-36.079c73.494,6.991,142.674,48.197,182.316,116.859 c10.559,18.289,18.37,37.543,23.563,57.236l-4.239,3.78c-5.533,4.937-8.775,12.018-8.899,19.429 c-0.001,0.081-0.003,0.161-0.006,0.241l-6.906-18.992c-1.029-2.834-2.545-5.433-4.503-7.724l-12.319-14.423 c-4.776-5.591-11.73-8.796-19.081-8.796h-15.079c-5.353,0-10.245,2.932-12.77,7.649c-2.525,4.718-2.249,10.416,0.72,14.868 l1.526,2.291c-9.744,8.379-21.014,15.084-33.014,19.606L348.7,173.649v-8.833c0-2.732-1.118-5.347-3.095-7.232l-18.613-17.769 c-1.027-0.98-2.251-1.73-3.59-2.201l-16.755-5.888c-5.213-1.834-10.919,0.909-12.749,6.118 c-1.831,5.211,0.908,10.918,6.118,12.749l14.724,5.175l13.962,13.327v7.008c0,1.611,0.39,3.199,1.136,4.628l25.877,49.567 c2.327,4.46,7.609,6.498,12.323,4.754l7.535-2.778c17.505-6.456,33.73-16.841,46.922-30.031c3.37-3.371,3.894-8.65,1.249-12.617 l-0.532-0.799h4.775c1.493,0,2.906,0.651,3.876,1.787l12.319,14.423c0.397,0.465,0.704,0.991,0.914,1.568l13.595,37.383 c1.168,3.212,3.896,5.604,7.23,6.344c0.72,0.159,1.445,0.237,2.166,0.237c2.623,0,5.176-1.033,7.07-2.929l6.471-6.471 c4.098-4.099,6.919-9.285,8.267-15.034c10.008,80.205-21.441,163.173-87.915,215.347c-4.345,3.409-5.103,9.694-1.692,14.039 c3.409,4.345,9.693,5.103,14.039,1.692c47.992-37.667,80.962-91.542,92.837-151.701 C519.15,244.773,508.685,181.758,477.694,128.08z M47.282,282.747l41.233,31.351c1.219,0.927,2.633,1.561,4.135,1.854 l24.852,4.856c3.172,0.62,5.818,2.496,7.453,5.284c1.635,2.787,1.979,6.012,0.973,9.083c-2.07,6.313-2.08,12.99-0.027,19.307 l3.168,9.748c1.893,5.826-1.309,12.107-7.134,14l-9.937,3.229c-3.467,1.126-6.045,4.05-6.73,7.628l-7.998,41.749 c-17.583-16.093-33.021-35.113-45.552-56.818C36.43,347.541,26.878,319.3,22.668,290.744L47.282,282.747z M105.559,123.258 l-11.763,12.603c-0.525,0.563-0.984,1.185-1.367,1.853L65.717,184.35l-23.741,16.976c-4.422,3.162-5.508,9.275-2.446,13.767 l8.879,13.024c-5.118,0.762-9.711,1.39-12.765,1.723c-0.587-0.563-1.201-1.134-1.836-1.724c-2.377-2.208-5.68-5.157-10.604-9.466 c8.121-50.263,32.341-97.615,70.433-133.76c7.294,2.297,13.28,7.738,16.204,14.835 C113.131,107.707,111.449,116.945,105.559,123.258z M187.089,177.901c4.46-2.51,14.812-2.877,22.37-3.145 c3.029-0.107,5.891-0.209,8.447-0.423c1.349-0.113,2.847-0.092,4.26,0.018c-0.631,1.62-0.836,3.398-0.562,5.162 c0.481,3.103,2.394,5.798,5.162,7.279c1.876,1.004,4.487,2.745,7.251,4.588c7.815,5.21,16.674,11.115,24.996,11.645 c7.568,0.491,11.779-3.822,13.583-5.659c0.144-0.146,0.28-0.292,0.424-0.425c1.016-0.828,1.968-1.938,2.676-3.277 c1.599,0.457,3.279,0.912,5.001,1.379c5.921,1.603,16.942,4.587,19.377,7.167c4.325,4.585,7.696,13.312,10.671,21.011 c1.503,3.891,2.923,7.563,4.516,10.968c0.684,1.461,1.357,2.966,2.041,4.49c4.614,10.292,9.844,21.958,20.939,29.21 c5.031,3.289,11.198,4.234,16.64,5.069c0.658,0.101,1.412,0.217,2.178,0.343c-3.23,4.506-7.829,8.788-12.688,13.313 c-12.379,11.528-27.785,25.876-20.69,48.765c3.349,10.808,3.505,11.976-1.88,17.834c-0.734,0.799-1.418,1.527-2.059,2.209 c-4.612,4.91-8.255,8.788-11.271,18.288c-0.876,2.759-2.011,4.037-4.072,6.357c-1.648,1.856-3.701,4.168-5.594,7.408 c-2.268,3.882-3.018,7.62-3.619,10.623c-0.593,2.955-0.929,4.438-2.089,5.862c-2.641,3.242-7.567,7.95-12.624,11.163 c-4.7,2.984-7.444,3.392-8.379,3.336c-1.067-1.144-4.932-6.153-10.772-23.486c-1.44-4.276-3.438-8.676-5.37-12.931 c-4.259-9.38-8.662-19.08-6.52-25.709c0.253-0.782,0.503-1.546,0.749-2.293c3.422-10.43,6.652-20.279,0.668-34.619 c-1.822-4.367-4.723-7.558-7.28-10.374c-1.655-1.821-3.53-3.885-3.819-5.073c-0.352-1.449-0.341-3.122-0.328-5.059 c0.034-5.225,0.086-13.12-7.763-20.47c-11.066-10.358-23.97-7.167-32.51-5.055c-2.623,0.648-5.101,1.262-7.297,1.52 c-14.048,1.646-26.59-3.654-34.42-14.55c-8.191-11.397-9.38-26.734-3.102-40.024c3.039-6.431,7.63-11.598,12.946-17.578 c1.161-1.307,2.333-2.625,3.505-3.975c1.95-2.248,4.096-5.292,6.365-8.515C179.855,186.423,184.899,179.263,187.089,177.901z\"\n})));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M410.022,344.278l-4.811-18.134c-1.051-3.96-4.411-6.878-8.478-7.364c-4.072-0.476-8.021,1.56-9.976,5.161 c-1.096,2.02-2.083,4.16-3.037,6.229c-1.605,3.481-3.265,7.081-4.992,9.068c-0.97,1.116-3.462,2.319-5.87,3.481 c-5.757,2.778-13.642,6.583-16.654,16.185c-1.87,5.956-1.172,10.668-0.662,14.108c0.441,2.983,0.543,4.017-0.256,5.893l-0.1,0.233 c-3.183,7.469-9.105,21.374-0.801,33.195c5.925,8.436,12.155,10.605,16.996,10.605c0.945,0.003,1.839-0.08,2.666-0.215 c10.2-1.667,17.868-12.277,24.134-33.393l11.762-39.641C410.466,347.926,410.494,346.054,410.022,344.278z M379.01,383.641 c-3.194,10.766-6.02,15.792-7.651,18.02c-0.188-0.24-0.392-0.512-0.61-0.823c-1.911-2.722,0.945-9.426,2.835-13.863l0.101-0.234 c3.048-7.154,2.233-12.648,1.64-16.66c-0.381-2.569-0.517-3.673-0.04-5.19c0.392-1.247,2.735-2.457,6.265-4.161 c1.565-0.756,3.288-1.587,5.027-2.593L379.01,383.641z\"\n})));\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M270.03,118.86l-0.675-0.236c-5.207-1.824-10.917,0.915-12.745,6.126c-1.828,5.212,0.915,10.917,6.126,12.745l0.674,0.236 c1.095,0.384,2.211,0.566,3.31,0.566c4.128,0,7.992-2.577,9.436-6.692C277.984,126.393,275.241,120.687,270.03,118.86z\"\n})));\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref18 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref19 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref20 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgWorld = function SvgWorld(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    xmlSpace: \"preserve\",\n    fill: \"#F47E17\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17, _ref18, _ref19, _ref20);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgWorld, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/world.460c1c4e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useContext } from 'react'\nimport {ReactComponent as DashboardIcon} from '../../images/Dashboard.svg'\nimport {ReactComponent as ChartsIcon} from '../../images/charts.svg'\nimport {ReactComponent as MapsIcon} from '../../images/world.svg'\nimport './Navigation.css'\nimport { WidgetsContext } from '../data/WidgetProvider'\n\nconst LeftNav = ({setActiveView, toggleNav}) => {\n    const {toggleShowDelete, showDelete} = useContext(WidgetsContext)\n\n    return(\n    <aside className=\"leftNav\">\n        <div className=\"nav__dashboard nav__btn\" onClick={() => {\n            setActiveView('dashboard')\n            toggleNav()\n            }}>\n            <DashboardIcon className=\"nav__dashboardIcon nav__icon\" />\n            <div className=\"nav__dashboardText nav__text\">User's Dashboard</div>\n        </div>\n        <div className=\"nav__charts nav__btn\" onClick={() => {\n            setActiveView('charts')\n            toggleNav()\n            if(showDelete) {\n                toggleShowDelete()\n            }\n            }}>\n            <ChartsIcon className=\"nav__chartsIcon nav__icon\" />\n            <div className=\"nav__chartsText nav__text\">Charts</div>\n        </div>\n        <div className=\"nav__maps nav__btn\" onClick={() => {\n            setActiveView('maps')\n            toggleNav()\n            if(showDelete) {\n                toggleShowDelete()\n            }\n            }}>\n            <MapsIcon className=\"nav__chartsIcon nav__icon\" />\n            <div className=\"nav__chartsText nav__text\">Maps</div>\n        </div>\n    </aside>\n    )\n}\n\nexport default LeftNav","import React, { useState, useEffect } from 'react'\nimport * as d3 from 'd3'\n\nexport const DataContext = React.createContext()\n\nexport const DataProvider = (props) => {\n    const [timeSeriesGlobal, setTimeSeriesGlobal] = useState([])\n    const [timeSeriesUSA, setTimeSeriesUSA] = useState([])\n    const [dailyReport, setDailyReport] = useState([])\n\n    const getData = () => {\n        return fetch('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv')\n        .then(resp => resp.text())\n        .then(text => d3.csvParse(text))\n        .then(setTimeSeriesGlobal)\n    }\n\n    const getUSAData = () => {\n        return fetch('https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_US.csv')\n        .then(resp => resp.text())\n        .then(text => d3.csvParse(text))\n        .then(setTimeSeriesUSA)\n    }\n\n    const getDailyReport = (date) => {\n        return fetch(`https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports_us/${date}.csv`)\n        .then(resp => resp.text())\n        .then(text => d3.csvParse(text))\n        .then(setDailyReport)\n    }\n\n    useEffect(() => {\n        getData()\n        getUSAData()\n    }, [])\n    \n    return(\n        <DataContext.Provider value={{\n            getData, timeSeriesGlobal, timeSeriesUSA, getDailyReport, dailyReport\n        }}>\n            {props.children}\n        </DataContext.Provider>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { format, formatDistanceStrict, subDays, addDays } from 'date-fns'\n\nexport const DateContext = React.createContext()\n\nexport const DateProvider = (props) => {\n    const [allDateArray, setAllDates] = useState([])\n\n    const calculateAllDates = () => {\n        const distanceFromDay0 = formatDistanceStrict(\n            subDays(new Date(), 1),\n            new Date(2020, 0, 22),\n            { unit: 'day' }\n        )\n\n        const distanceNumberString = distanceFromDay0.split(' ')[0]\n        const distanceNumber = parseInt(distanceNumberString)\n        \n        let allDates = []\n        let i\n        for (i = 0; i < (distanceNumber); i++) {\n            const day = format(addDays(new Date(2020, 0, 22), i), \"M/d/yy\")\n        \n            allDates.push(day)\n        }\n\n        setAllDates(allDates)\n    }\n\n    useEffect(() => {\n        calculateAllDates()\n    }, [])\n\n    return (\n        <DateContext.Provider value={{\n            allDateArray\n        }}>\n            {props.children}\n        </DateContext.Provider>\n    )\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { DataContext } from '../data/DataProvider'\nimport { DateContext } from '../data/DateCalculator'\nimport { format } from 'date-fns'\n\nexport const JSONContext = React.createContext()\n\nexport const CreateJSON = (props) => {\n\n    //GLOBAL\n    const { timeSeriesGlobal } = useContext(DataContext)\n    const { allDateArray } = useContext(DateContext)\n\n    //defining start and end to be used for time range in map config\n    const unformattedEnd = allDateArray.slice(-1)[0]\n    const end = new Date(unformattedEnd) - 18000000\n    const start = end - 86400000\n\n    const formatDate = (date) => {\n        return format(new Date(date), 'yyyy-MM-dd KK:mm:ss')\n    }\n\n    const deconstructedGlobal = []\n\n    timeSeriesGlobal.forEach(datum => {\n        allDateArray.map(day => {\n            deconstructedGlobal.push([datum['Country/Region'], datum['Province/State'], formatDate(day), +(datum['Lat']), +(datum['Long']), +(datum[day])])\n        })\n    })\n\n    const globalData = {\n        fields: [\n            { name: 'country', format: '', type: 'string' },\n            { name: 'state', format: '', type: 'string' },\n            { name: 'day', format: 'YYYY-M-D H:m:s', type: 'timestamp' },\n            { name: 'latitude', format: '', type: 'real' },\n            { name: 'longitude', format: '', type: 'real' },\n            { name: 'count', format: '', type: 'integer' },\n        ],\n        rows: deconstructedGlobal\n    }\n\n    //USA\n    const { timeSeriesUSA } = useContext(DataContext)\n    const [USAData, setUSAData] = useState({})\n    const [deconstructedUSA, setDeconstructedUSA] = useState()\n\n    const deconstructed = []\n\n    const latest = allDateArray.slice(-1)[0]\n\n    // timeSeriesUSA.forEach(datum => {\n    //     allDateArray.map(day => {\n    //         deconstructed.push([datum['Province_State'], datum['Admin2'], formatDate(day), +(datum['Lat']), +(datum['Long_']), +(datum[day])])\n    //     })\n    // })\n\n    timeSeriesUSA.forEach(datum => {\n        deconstructed.push([datum['Province_State'], datum['Admin2'], formatDate(latest), +(datum['Lat']), +(datum['Long_']), +(datum[latest])])\n    })\n\n    useEffect(() => {\n        setDeconstructedUSA(deconstructed)\n    }, [timeSeriesUSA])\n\n    useEffect(() => {\n\n        const data = {\n            fields: [\n                { name: 'state', format: '', type: 'string' },\n                { name: 'county', format: '', type: 'string' },\n                { name: 'day', format: 'YYYY-M-D H:m:s', type: 'timestamp' },\n                { name: 'latitude', format: '', type: 'real' },\n                { name: 'longitude', format: '', type: 'real' },\n                { name: 'count', format: '', type: 'integer' },\n            ],\n            rows: deconstructedUSA\n        }\n\n        setUSAData(data)\n\n    }, [deconstructedUSA])\n\n    return (\n        <JSONContext.Provider value={{\n            globalData, USAData, start, end\n        }}>\n            {props.children}\n        </JSONContext.Provider>\n    )\n}","import React, { useContext, useEffect } from 'react'\nimport keplerGLReducer from 'kepler.gl/reducers'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { taskMiddleware } from 'react-palm/tasks'\nimport { Provider, useDispatch } from 'react-redux'\nimport KeplerGl from 'kepler.gl'\nimport { addDataToMap } from 'kepler.gl/actions'\nimport { JSONContext } from './JSONConverter'\n\nconst reducers = combineReducers({\n  keplerGl: keplerGLReducer\n})\n\nconst store = createStore(reducers, {}, applyMiddleware(taskMiddleware))\n\nconst LoginMap = () => {\n  return (\n    <Provider store={store}>\n      <Map />\n    </Provider>)\n}\n\nexport default LoginMap\n\nconst Map = (props) => {\n  const dispatch = useDispatch()\n  const { globalData, start, end } = useContext(JSONContext)\n  const { USAData } = useContext(JSONContext)\n\n  const config = {\n    \"version\": \"v1\",\n    \"config\": {\n      \"visState\": {\n        \"filters\": [\n          {\n            \"dataId\": [\n              \"covid19_global\"\n            ],\n            \"id\": \"i8mx62ht9\",\n            \"name\": [\n              \"day\"\n            ],\n            \"type\": \"timeRange\",\n            \"value\": [\n              start,\n              end\n            ],\n            \"enlarged\": true,\n            \"plotType\": \"histogram\",\n            \"yAxis\": null\n          }\n        ],\n        \"layers\": [\n          {\n            \"id\": \"iab9p35\",\n            \"type\": \"point\",\n            \"config\": {\n              \"dataId\": \"covid19_usa\",\n              \"label\": \"Point\",\n              \"color\": [\n                24,\n                38,\n                77\n              ],\n              \"columns\": {\n                \"lat\": \"latitude\",\n                \"lng\": \"longitude\",\n                \"altitude\": null\n              },\n              \"isVisible\": true,\n              \"visConfig\": {\n                \"radius\": 51.7,\n                \"fixedRadius\": false,\n                \"opacity\": 0.25,\n                \"outline\": false,\n                \"thickness\": 99.8,\n                \"strokeColor\": [\n                  24,\n                  38,\n                  77\n                ],\n                \"colorRange\": {\n                  \"name\": \"Global Warming\",\n                  \"type\": \"sequential\",\n                  \"category\": \"Uber\",\n                  \"colors\": [\n                    \"#5A1846\",\n                    \"#900C3F\",\n                    \"#C70039\",\n                    \"#E3611C\",\n                    \"#F1920E\",\n                    \"#FFC300\"\n                  ]\n                },\n                \"strokeColorRange\": {\n                  \"name\": \"Global Warming\",\n                  \"type\": \"sequential\",\n                  \"category\": \"Uber\",\n                  \"colors\": [\n                    \"#5A1846\",\n                    \"#900C3F\",\n                    \"#C70039\",\n                    \"#E3611C\",\n                    \"#F1920E\",\n                    \"#FFC300\"\n                  ]\n                },\n                \"radiusRange\": [\n                  0,\n                  146.4\n                ],\n                \"filled\": true\n              },\n              \"textLabel\": [\n                {\n                  \"field\": null,\n                  \"color\": [\n                    255,\n                    255,\n                    255\n                  ],\n                  \"size\": 18,\n                  \"offset\": [\n                    0,\n                    0\n                  ],\n                  \"anchor\": \"start\",\n                  \"alignment\": \"center\"\n                }\n              ]\n            },\n            \"visualChannels\": {\n              \"colorField\": null,\n              \"colorScale\": \"quantile\",\n              \"strokeColorField\": null,\n              \"strokeColorScale\": \"quantile\",\n              \"sizeField\": {\n                \"name\": \"count\",\n                \"type\": \"integer\"\n              },\n              \"sizeScale\": \"sqrt\"\n            }\n          },\n          {\n            \"id\": \"kwf57su\",\n            \"type\": \"point\",\n            \"config\": {\n              \"dataId\": \"covid19_global\",\n              \"label\": \"Point\",\n              \"color\": [\n                254,\n                137,\n                26\n              ],\n              \"columns\": {\n                \"lat\": \"latitude\",\n                \"lng\": \"longitude\",\n                \"altitude\": null\n              },\n              \"isVisible\": true,\n              \"visConfig\": {\n                \"radius\": 10,\n                \"fixedRadius\": false,\n                \"opacity\": 0.25,\n                \"outline\": false,\n                \"thickness\": 2,\n                \"strokeColor\": null,\n                \"colorRange\": {\n                  \"name\": \"Global Warming\",\n                  \"type\": \"sequential\",\n                  \"category\": \"Uber\",\n                  \"colors\": [\n                    \"#5A1846\",\n                    \"#900C3F\",\n                    \"#C70039\",\n                    \"#E3611C\",\n                    \"#F1920E\",\n                    \"#FFC300\"\n                  ]\n                },\n                \"strokeColorRange\": {\n                  \"name\": \"Global Warming\",\n                  \"type\": \"sequential\",\n                  \"category\": \"Uber\",\n                  \"colors\": [\n                    \"#5A1846\",\n                    \"#900C3F\",\n                    \"#C70039\",\n                    \"#E3611C\",\n                    \"#F1920E\",\n                    \"#FFC300\"\n                  ]\n                },\n                \"radiusRange\": [\n                  0,\n                  300.8\n                ],\n                \"filled\": true\n              },\n              \"textLabel\": [\n                {\n                  \"field\": null,\n                  \"color\": [\n                    255,\n                    255,\n                    255\n                  ],\n                  \"size\": 18,\n                  \"offset\": [\n                    0,\n                    0\n                  ],\n                  \"anchor\": \"start\",\n                  \"alignment\": \"center\"\n                }\n              ]\n            },\n            \"visualChannels\": {\n              \"colorField\": null,\n              \"colorScale\": \"quantile\",\n              \"strokeColorField\": null,\n              \"strokeColorScale\": \"quantile\",\n              \"sizeField\": {\n                \"name\": \"count\",\n                \"type\": \"integer\"\n              },\n              \"sizeScale\": \"sqrt\"\n            }\n          }\n        ],\n        \"interactionConfig\": {\n          \"tooltip\": {\n            \"fieldsToShow\": {\n              \"covid19_global\": [\n                \"country\",\n                \"state\",\n                \"day\",\n                \"count\"\n              ],\n              \"covid19_usa\": [\n                \"state\",\n                \"county\",\n                \"day\",\n                \"count\"\n              ]\n            },\n            \"enabled\": true\n          },\n          \"brush\": {\n            \"size\": 0.5,\n            \"enabled\": false\n          },\n          \"coordinate\": {\n            \"enabled\": false\n          }\n        },\n        \"layerBlending\": \"normal\",\n        \"splitMaps\": [],\n        \"animationConfig\": {\n          \"currentTime\": null,\n          \"speed\": 1\n        }\n      },\n      \"mapState\": {\n        \"bearing\": 0,\n        \"dragRotate\": false,\n        \"latitude\": 8.557399915427105,\n        \"longitude\": 20.53420345759785,\n        \"pitch\": 0,\n        \"zoom\": 1.8180832729656744,\n        \"isSplit\": false\n      },\n      \"mapStyle\": {\n        \"styleType\": \"muted\",\n        \"topLayerGroups\": {},\n        \"visibleLayerGroups\": {\n          \"label\": true,\n          \"road\": true,\n          \"border\": false,\n          \"building\": true,\n          \"water\": true,\n          \"land\": true,\n          \"3d building\": false\n        },\n        \"threeDBuildingColor\": [\n          224.4071295378559,\n          224.4071295378559,\n          224.4071295378559\n        ],\n        \"mapStyles\": {}\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (globalData) {\n      dispatch(\n        addDataToMap({\n          datasets: {\n            info: {\n              label: 'COVID-19 Global',\n              id: 'covid19_global'\n            },\n            data: globalData\n          },\n          option: {\n            centerMap: false,\n            readOnly: true\n          },\n          config: config\n        })\n      )\n    }\n  }, [dispatch, globalData])\n\n  useEffect(() => {\n    if (USAData) {\n        dispatch(\n            addDataToMap({\n                datasets: {\n                    info: {\n                        label: 'COVID-19 USA',\n                        id: 'covid19_usa'\n                    },\n                    data: USAData\n                },\n                option: {\n                    centerMap: false,\n                    readOnly: true\n                },\n                config: {}\n            })\n        )\n    }\n}, [dispatch, USAData])\n\n  return <KeplerGl id='login' mapboxApiAccessToken='pk.eyJ1IjoicGFya2VyaG9kZ2UiLCJhIjoiY2thMmtwYnlkMDc1bTNmbmR3bHcxaHdweCJ9.igAic2Z7pSjJUmtuulWnWA'\n    width={window.innerWidth} height={window.innerHeight} />\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M505.755,123.592c-8.341-8.341-21.824-8.341-30.165,0L256.005,343.176L36.421,123.592c-8.341-8.341-21.824-8.341-30.165,0 s-8.341,21.824,0,30.165l234.667,234.667c4.16,4.16,9.621,6.251,15.083,6.251c5.462,0,10.923-2.091,15.083-6.251l234.667-234.667 C514.096,145.416,514.096,131.933,505.755,123.592z\"\n})));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref15 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref16 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar _ref17 = /*#__PURE__*/React.createElement(\"g\", null);\n\nvar SvgArrow = function SvgArrow(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512.011 512.011\",\n    style: {\n      enableBackground: \"new 0 0 512.011 512.011\"\n    },\n    xmlSpace: \"preserve\",\n    fill: \"#F47E17\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref16, _ref17);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgArrow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/arrow.88f2ea7c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from 'react'\nimport LoginMap from '../map/LoginMap'\nimport { ReactComponent as Arrow } from '../../images/arrow.svg'\nimport { motion, useAnimation } from 'framer-motion'\n\nexport const WelcomePageOne = ({ togglePage }) => {\n    const controls = useAnimation()\n\n    useEffect(() => {\n        controls.start({\n            scale: [1, 1.15, 1],\n            transition: { duration: 1.5, loop: Infinity }\n        })\n    })\n\n    return (\n        <div>\n            <LoginMap />\n            <div className=\"arrowIcon\">\n                <div className='arrowText'>proceed to login</div>\n                <motion.div animate={controls}\n                    onMouseOver={() => {\n                        controls.stop()\n                        controls.start({scale: 1.3})}}\n                    onMouseLeave={() => {\n                        controls.start({\n                            scale: [1, 1.15, 1],\n                            transition: { duration: 1.5, loop: Infinity }\n                        })\n                    }}>\n                    <Arrow className='arrow' onClick={togglePage} />\n                </motion.div>\n            </div>\n        </div>\n    )\n}","import React, {useRef} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\n\nexport const Register = (props) => {\n    const name = useRef()\n    const email = useRef()\n    const password = useRef()\n    const verifyPassword = useRef()\n\n\n    const existingUserCheck = () => {\n        return fetch(`https://custom-covid19-tracker-api.herokuapp.com/users?email=${email.current.value}`)\n        .then(_ => _.json())\n        .then(user => {\n            if (user.length) {\n                return false\n            }\n            return true\n        })\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n\n        if (password.current.value === verifyPassword.current.value) {\n            existingUserCheck()\n            .then((result) => {\n                if (result) {\n                fetch('https://custom-covid19-tracker-api.herokuapp.com/users', {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        email: email.current.value,\n                        password: password.current.value,\n                        name: name.current.value\n                    })\n                })\n                    .then(_ => _.json())\n                    .then(createdUser => {\n                        if (createdUser.hasOwnProperty(\"id\")) {\n                            sessionStorage.setItem(\"user\", createdUser.id)\n                            props.toggleLogin()\n                        }\n                    })\n                }\n                else {\n                    window.alert(\"user already exists\")\n                }\n            })\n        }\n        else {\n            window.alert(\"Passwords do not match\")\n        }\n    }\n\n    return (\n        <div className=\"registerFormContainer\">\n            <form onSubmit={handleRegister}>\n                <div className=\"darkgray\">If you do not have a custom dashboard yet, please register a new account</div>\n                <fieldset>\n                    <TextField inputRef={name} type=\"text\"\n                        name=\"name\"\n                        className=\"form-control\"\n                        placeholder=\"Name\"\n                        required  />\n                </fieldset>\n                <fieldset>\n                    <TextField inputRef={email} type=\"email\"\n                        name=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Email address\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <TextField inputRef={password} type=\"password\"\n                        name=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <TextField inputRef={verifyPassword} type=\"password\"\n                        name=\"verifyPassword\"\n                        className=\"form-control\"\n                        placeholder=\"Verify password\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <Button type=\"submit\">\n                        Register\n                    </Button>\n                </fieldset>\n            </form>\n        </div>\n    )\n}","import React, {useRef} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nexport const Login = (props) => {\n    const email = useRef()\n    const password = useRef()\n\n    const existingUserCheck = () => {\n        return fetch(`https://custom-covid19-tracker-api.herokuapp.com/users?email=${email.current.value}`)\n        .then(_ => _.json())\n        .then(user => {\n            if (user.length) {\n                return user[0]\n            }\n            return false\n        })\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists && exists.password === password.current.value) {\n                    sessionStorage.setItem(\"user\", exists.id)\n                    props.toggleLogin()\n                }\n                else if (exists && exists.password !== password.current.value) {\n                    window.alert(\"Password does not match\")\n                }\n                else if (!exists) {\n                    window.alert(\"User account does not exist\")\n                }\n            })\n    }\n\n    return (\n        <div className=\"loginFormContainer\">\n            <form onSubmit={handleLogin}>\n                <div>Please sign in</div>\n                <fieldset>\n                    <TextField inputRef={email} type=\"email\"\n                        id=\"email\"\n                        className=\"form-control\"\n                        placeholder=\"Email address\"\n                        required autoFocus />\n                </fieldset>\n                <fieldset>\n                    <TextField inputRef={password} type=\"password\"\n                        id=\"password\"\n                        className=\"form-control\"\n                        placeholder=\"Password\"\n                        required />\n                </fieldset>\n                <fieldset>\n                    <Button type=\"submit\">\n                        Sign in\n                    </Button>\n                </fieldset>\n            </form>\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport { VictoryChart, VictoryAxis, VictoryLine, VictoryLegend } from 'victory'\nimport { DataContext } from '../data/DataProvider'\nimport { DateContext } from '../data/DateCalculator'\n\nexport const LoginChart = () => {\n    const countrySelected = ''\n    const stateSelected = ''\n    const countySelected = ''\n\n    const { timeSeriesGlobal } = useContext(DataContext) || []\n    const { timeSeriesUSA } = useContext(DataContext) || []\n    const { allDateArray } = useContext(DateContext) || []\n\n    let data = [{ date: \"1/21/20\", cases: 0 }]\n\n    const findData = () => {\n        if (countySelected !== '') {\n            //push county data to data array\n            //loop through time series data and return the object that matches the county\n            const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected) || []\n            const countyObject = countyListArray.find(obj => obj['Admin2'] === countySelected) || {}\n\n            const countyTotalsArray = []\n            //for each day, push the total for that day to the totals array\n            allDateArray.forEach(day => {\n                countyTotalsArray.push(+(countyObject[day]))\n            })\n\n            const dataForThisSelection = []\n\n            allDateArray.forEach((v, i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = countyTotalsArray[i]\n                dataForThisSelection.push(obj)\n            })\n\n            data = dataForThisSelection\n        }\n        else if (stateSelected !== '') {\n            //push state/province data to data array\n            if (countrySelected === 'US') {\n                const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected)\n                const stateTotalsArray = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    countyListArray.map(count => {\n                        return total += +(count[date])\n                    })\n                    stateTotalsArray.push(total)\n                }\n\n                const dataForThisSelection = []\n                allDateArray.map(date => totalForDate(date))\n\n                allDateArray.forEach((v, i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = stateTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n                const provinceObject = provinceListArray.find(obj => obj['Province/State'] === stateSelected)\n\n                const provinceTotalsArray = []\n                allDateArray.forEach(day => {\n                    provinceTotalsArray.push(+(provinceObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v, i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = provinceTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n\n        }\n        else if (countrySelected !== '') {\n            //push country data to data array\n            const arrayOfCountriesThatBelongToOtherCountries = []\n            timeSeriesGlobal.forEach(place => {\n                if (place['Province/State'] !== '') {\n                    arrayOfCountriesThatBelongToOtherCountries.push(place['Province/State'])\n                }\n            })\n            if (countrySelected === 'Canada' || countrySelected === 'China' || countrySelected === 'Australia') {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n\n                const arrayOfTotalsForEachDay = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    provinceListArray.map(prov => {\n                        return total += +(prov[date]) //<- string converted to number\n                    })\n                    arrayOfTotalsForEachDay.push(total)\n                }\n\n                allDateArray.map(date => totalForDate(date))\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v, i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = arrayOfTotalsForEachDay[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else if (arrayOfCountriesThatBelongToOtherCountries.includes(countrySelected)) {\n                const countryObject = timeSeriesGlobal.find(c => c['Province/State'] === countrySelected)\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v, i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const countryObject = timeSeriesGlobal.find(c => c['Country/Region'] === countrySelected) || {}\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v, i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n        }\n        else {\n            //push global data to data array\n            const arrayOfTotalsForEachDay = []\n\n            const totalForDate = (date) => {\n                let total = 0\n                timeSeriesGlobal.map(prov => {\n                    return total += +(prov[date]) //<- string converted to number\n                })\n                arrayOfTotalsForEachDay.push(total)\n            }\n\n            allDateArray.map(date => totalForDate(date))\n\n            const dataForNoSelection = []\n\n            allDateArray.forEach((v, i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = arrayOfTotalsForEachDay[i]\n                dataForNoSelection.push(obj)\n            })\n\n            data = dataForNoSelection\n        }\n    }\n\n    findData()\n\n    //add newCases and dayNumber properties to each datum object\n    data.forEach((v, i) => {\n        v.dayNumber = i\n        if (i > 0) {\n            const old = data[i - 1]\n\n            const newCases = v.cases - old.cases\n            v.newCases = newCases\n        }\n        else {\n            v.newCases = v.cases\n        }\n    })\n\n    //add movingAverage property to each datum object\n    const avg = (values) => {\n        let sum = values.reduce((accumulator, currValue) => {\n            return accumulator + +(currValue)\n        }, 0)\n\n        let avg = sum / values.length\n        return avg\n    }\n\n    const sma = (values, period) => {\n        let sma = values.map((v, i, arr) => {\n            if (i < period) {\n                v = 0\n            }\n            else {\n                v = arr.slice(i - period, i)\n                v = avg(v)\n            }\n\n            data[i].movingAverage = v\n            return v\n        }, 0)\n\n        return sma\n    }\n\n    let newCasesArray = []\n    data.forEach((v) => {\n        newCasesArray.push(v.newCases)\n    })\n    sma(newCasesArray, 14)\n\n    const shortenNumber = (n) => {\n        const mToK = n / 1000\n        if (mToK >= 1000) {\n            return `${mToK / 1000}M`\n        }\n        else {\n            return `${mToK}K`\n        }\n    }\n\n    const formatNumber = (x) => {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }\n\n    return (\n        <div className=\"chartContainer\">\n            <VictoryChart\n                className='chart'\n                height={300}\n                width={450}>\n                <VictoryLine\n                    data={data}\n                    style={{\n                        data: { stroke: '#F47E17' }\n                    }}\n                    x=\"dayNumber\"\n                    y=\"newCases\"\n                    barRatio={1}\n                />\n                <VictoryLine\n                    data={data}\n                    x=\"dayNumber\"\n                    y=\"movingAverage\"\n                    barRatio={1}\n                />\n                <VictoryAxis dependentAxis tickCount={5} tickFormat={(n) => shortenNumber(n)} />\n            </VictoryChart>\n        </div>\n    )\n}","import React from 'react'\nimport { Register } from './Register'\nimport { Login } from './Login'\nimport { LoginChart } from './LoginChart'\n\nexport const WelcomePageTwo = ({ toggleLogin }) => (\n    <>\n        <div className=\"info\">\n            <LoginChart />\n            <div>As policy makers begin to re-open states and municipalities with questionable regard for scientific data,\n            Custom COVID-19 Tracker was designed for you to track the data in your region to make the right\n            decisions for you.\n                </div>\n            <div>\n                Using data uploaded and maintained by the Johns Hopkins University Center for Systems Science and Engineering,\n                gathered from the World Health Organization, US CDC, China CDC, National Health Comission of the People's Republic of China,\n                Government of Canada, Australia Government Department of Health, and more, Custom COVID-19 Tracker aims to provide\n                you with the most detailed analysis of the novel coronavirus (SARS-CoV-2/COVID-19).\n                </div>\n            <div>\n                Register or login to begin creating your customizable dashboard to track confirmed cases, percent change, new cases,\n                and moving averages for the countries, provinces, states, and counties that matter to you.\n                </div>\n        </div>\n        <div className=\"authContainer\">\n            <Login toggleLogin={toggleLogin} />\n            <Register toggleLogin={toggleLogin} />\n        </div>\n    </>\n)","import React from 'react'\nimport { useSpring, animated } from 'react-spring'\n\nexport const WelcomePageZero = () => {\n    const appear = useSpring({ opacity: 1, from: { opacity: 0 }, delay: 2000 })\n\n    return (\n            <div className='welcomeLoad'>\n                <animated.div className='welcomeLoadMessage' \n                    style={appear}>view the demo or proceed to login.</animated.div>\n            </div>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport './Auth.css'\nimport { WelcomePageOne } from './WelcomePageOne'\nimport { WelcomePageTwo } from './WelcomePageTwo'\nimport { useSpring, animated } from 'react-spring'\nimport { WelcomePageZero } from './WelcomePageZero'\n\nexport const Auth = ({ toggleLogin }) => {\n    const [page, setPage] = useState(0)\n    const togglePage = () => setPage(2)\n    const [components, setComponents] = useState()\n\n    useEffect(() => {\n        setTimeout(() => {\n            setPage(1)\n        }, 3500)\n    }, [])\n\n    const showPageZero = () => {\n        return <WelcomePageZero />\n    }\n\n    const showPageOne = () => {\n        return <WelcomePageOne togglePage={togglePage} />\n    }\n\n    const showPageTwo = () => {\n        return <WelcomePageTwo toggleLogin={toggleLogin} />\n    }\n\n    useEffect(() => {\n        if (page === 1) {\n            setComponents(showPageOne)\n        }\n        else if (page === 2) {\n            setComponents(showPageTwo)\n        }\n        else if (page === 0) {\n            setComponents(showPageZero)\n        }\n    }, [page])\n\n    const animation = useSpring({ opacity: 1, from: { opacity: 0 } , delay: 1000})\n\n    return (\n        <div className='auth'>\n            <animated.div className='welcomeMessageContainer' style={animation} >\n                <h1 className=\"welcomeMessage\">Welcome to Custom COVID-19 Tracker</h1>\n            </animated.div>\n            {components}\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, createContainer } from 'victory'\nimport { DataContext } from '../data/DataProvider'\nimport { DateContext } from '../data/DateCalculator'\n\nexport const TotalCasesDash = ({country, state, county}) => {\n    const countrySelected = country\n    const stateSelected = state\n    const countySelected = county\n\n    const { timeSeriesGlobal } = useContext(DataContext) || []\n    const {timeSeriesUSA} = useContext(DataContext) || []\n    const {allDateArray} = useContext(DateContext) || []\n\n    let data = [{date:\"1/21/20\", cases: 0}]\n\n    const findData = () => {\n        if(countySelected !== '') {\n            //push county data to data array\n            //loop through time series data and return the object that matches the county\n            const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected) || []\n            const countyObject = countyListArray.find(obj => obj['Admin2'] === countySelected) || {}\n\n            const countyTotalsArray = []\n            //for each day, push the total for that day to the totals array\n            allDateArray.forEach(day => {\n                countyTotalsArray.push(+(countyObject[day]))\n            })\n\n            const dataForThisSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = countyTotalsArray[i]\n                dataForThisSelection.push(obj)\n            })\n\n            data = dataForThisSelection\n        }\n        else if (stateSelected !== '') {\n            //push state/province data to data array\n            if (countrySelected === 'US') {\n                const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected)\n                const stateTotalsArray = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    countyListArray.map(count => {\n                        return total += +(count[date])\n                    })\n                    stateTotalsArray.push(total)\n                }\n\n                const dataForThisSelection = []\n                allDateArray.map(date => totalForDate(date))\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = stateTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n                const provinceObject = provinceListArray.find(obj => obj['Province/State'] === stateSelected)\n\n                const provinceTotalsArray = []\n                allDateArray.forEach(day => {\n                    provinceTotalsArray.push(+(provinceObject[day]))\n                })\n                \n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = provinceTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n\n        }\n        else if (countrySelected !== '') {\n            //push country data to data array\n            const arrayOfCountriesThatBelongToOtherCountries = []\n            timeSeriesGlobal.forEach(place => {\n                if(place['Province/State'] !== '') {\n                    arrayOfCountriesThatBelongToOtherCountries.push(place['Province/State'])\n                }\n            })\n            if (countrySelected === 'Canada' || countrySelected === 'China' || countrySelected === 'Australia') {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n\n                const arrayOfTotalsForEachDay = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    provinceListArray.map(prov => {\n                        return total += +(prov[date]) //<- string converted to number\n                    })\n                    arrayOfTotalsForEachDay.push(total)\n                }\n\n                allDateArray.map(date => totalForDate(date))\n\n                const dataForThisSelection = []\n                \n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = arrayOfTotalsForEachDay[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else if (arrayOfCountriesThatBelongToOtherCountries.includes(countrySelected)){\n                const countryObject = timeSeriesGlobal.find(c => c['Province/State'] === countrySelected) || {}\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const countryObject = timeSeriesGlobal.find(c => c['Country/Region'] === countrySelected) || {}\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n        }\n        else {\n            //push global data to data array\n            const arrayOfTotalsForEachDay = []\n\n            const totalForDate = (date) => {\n                let total = 0\n                timeSeriesGlobal.map(prov => {\n                    return total += +(prov[date]) //<- string converted to number\n                })\n                arrayOfTotalsForEachDay.push(total)\n            }\n\n            allDateArray.map(date => totalForDate(date))\n\n            const dataForNoSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = arrayOfTotalsForEachDay[i]\n                dataForNoSelection.push(obj)\n            })\n\n            data = dataForNoSelection\n        }\n    }\n\n    findData()\n\n    const formatNumber = (x) => {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }\n\n    const VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\")\n\n    const shortenNumber = (n) => {\n        const mToK = n/1000\n        if(mToK >= 1000) {\n            return `${mToK/1000}M`\n        }\n        else {\n            return `${mToK}K`\n        }\n    }\n\n    const chartHeader = () => {\n        if(countySelected) {\n            return `Confirmed Cases: ${countrySelected} - ${stateSelected} - ${countySelected}`\n        }\n        else if(stateSelected) {\n            return `Confirmed Cases: ${countrySelected} - ${stateSelected}`\n        }\n        else if(countrySelected) {\n            return `Confirmed Cases: ${countrySelected}`\n        }\n        else {\n            return `Confirmed Cases: Global`\n        }\n    }\n\n    const chartDescription = () => {\n        const mostRecent = data.slice(-1)[0] || {}\n\n        return(\n            `As of ${mostRecent.date} there are ${mostRecent.cases ? formatNumber(mostRecent.cases) : ''} cases`\n        )\n    }\n\n    return (\n        <div className=\"Chart\">\n            <div className=\"chartHeader\">{chartHeader()}</div>\n            <div className=\"chartDescription\">{chartDescription()}</div>\n            <VictoryChart\n                height={400}\n                width={600}\n                containerComponent={\n                <VictoryZoomVoronoiContainer responsive={false}\n                    labels={({datum}) => `Date: ${datum.date}\n                    cases: ${datum.cases}`}\n                />\n            }>\n                <VictoryAxis tickCount={10} />\n                <VictoryAxis dependentAxis tickCount={5} tickFormat={(n) => shortenNumber(n)} />\n                <VictoryBar \n                    data={data}\n                    style={{\n                        data: {fill: '#F47E17', stroke: 'white', strokeWidth: 1}\n                    }}\n                    x=\"date\"\n                    y=\"cases\"\n                    barRatio={1}\n                    />\n            </VictoryChart>\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, createContainer } from 'victory'\nimport { DataContext } from '../data/DataProvider'\nimport { DateContext } from '../data/DateCalculator'\n\nexport const PercentChangeDash = ({country, state, county}) => {\n    const countrySelected = country\n    const stateSelected = state\n    const countySelected = county\n\n    const { timeSeriesGlobal } = useContext(DataContext) || []\n    const {timeSeriesUSA} = useContext(DataContext) || []\n    const {allDateArray} = useContext(DateContext) || []\n\n    let data = [{date:\"1/21/20\", cases: 0}]\n\n    const findData = () => {\n        if(countySelected !== '') {\n            //push county data to data array\n            //loop through time series data and return the object that matches the county\n            const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected) || []\n            const countyObject = countyListArray.find(obj => obj['Admin2'] === countySelected) || {}\n\n            const countyTotalsArray = []\n            //for each day, push the total for that day to the totals array\n            allDateArray.forEach(day => {\n                countyTotalsArray.push(+(countyObject[day]))\n            })\n\n            const dataForThisSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = countyTotalsArray[i]\n                dataForThisSelection.push(obj)\n            })\n\n            data = dataForThisSelection\n        }\n        else if (stateSelected !== '') {\n            //push state/province data to data array\n            if (countrySelected === 'US') {\n                const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected) || []\n                const stateTotalsArray = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    countyListArray.map(count => {\n                        return total += +(count[date])\n                    })\n                    stateTotalsArray.push(total)\n                }\n\n                const dataForThisSelection = []\n                allDateArray.map(date => totalForDate(date))\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = stateTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected) || []\n                const provinceObject = provinceListArray.find(obj => obj['Province/State'] === stateSelected) || {}\n\n                const provinceTotalsArray = []\n                allDateArray.forEach(day => {\n                    provinceTotalsArray.push(+(provinceObject[day]))\n                })\n                \n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = provinceTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n\n        }\n        else if (countrySelected !== '') {\n            //push country data to data array\n            const arrayOfCountriesThatBelongToOtherCountries = []\n            timeSeriesGlobal.forEach(place => {\n                if(place['Province/State'] !== '') {\n                    arrayOfCountriesThatBelongToOtherCountries.push(place['Province/State'])\n                }\n            })\n            if (countrySelected === 'Canada' || countrySelected === 'China' || countrySelected === 'Australia') {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected) || []\n\n                const arrayOfTotalsForEachDay = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    provinceListArray.map(prov => {\n                        return total += +(prov[date]) //<- string converted to number\n                    })\n                    arrayOfTotalsForEachDay.push(total)\n                }\n\n                allDateArray.map(date => totalForDate(date))\n\n                const dataForThisSelection = []\n                \n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = arrayOfTotalsForEachDay[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else if (arrayOfCountriesThatBelongToOtherCountries.includes(countrySelected)){\n                const countryObject = timeSeriesGlobal.find(c => c['Province/State'] === countrySelected) || {}\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const countryObject = timeSeriesGlobal.find(c => c['Country/Region'] === countrySelected) || {}\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n        }\n        else {\n            //push global data to data array\n            const arrayOfTotalsForEachDay = []\n\n            const totalForDate = (date) => {\n                let total = 0\n                timeSeriesGlobal.map(prov => {\n                    return total += +(prov[date]) //<- string converted to number\n                })\n                arrayOfTotalsForEachDay.push(total)\n            }\n\n            allDateArray.map(date => totalForDate(date))\n\n            const dataForNoSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = arrayOfTotalsForEachDay[i]\n                dataForNoSelection.push(obj)\n            })\n\n            data = dataForNoSelection\n        }\n    }\n\n    findData()\n\n    //data => %change\n    data.forEach((v, i) => {\n        if(i > 0) {\n        const old = data[i-1]\n\n        const change = v.cases - old.cases\n            if(change === 0) {\n                v.percentChange = 0\n            }\n            else if (old.cases === 0) {\n                v.percentChange = 0\n            }\n            else {\n                const percentChange = (change/(Math.abs(old.cases)) * 100)\n                v.percentChange = percentChange\n        }\n        }\n        else {\n            v.percentChange = 0\n        }\n    })\n\n     //add newCases and dayNumber properties to each datum object\n     data.forEach((v, i) => {\n        v.dayNumber = i\n        if(i > 0) {\n        const old = data[i-1]\n\n        const newCases = v.cases - old.cases\n        v.newCases = newCases\n        }\n        else {\n            v.newCases = v.cases\n        }\n    })\n\n    const VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\")\n\n    const chartHeader = () => {\n        if(countySelected) {\n            return `% Change: ${countrySelected} - ${stateSelected} - ${countySelected}`\n        }\n        else if(stateSelected) {\n            return `% Change: ${countrySelected} - ${stateSelected}`\n        }\n        else if(countrySelected) {\n            return `% Change: ${countrySelected}`\n        }\n        else {\n            return `% Change: Global`\n        }\n    }\n\n    return (\n        <div className=\"Chart\">\n            <div className=\"chartHeader\">{chartHeader()}</div>\n            <VictoryChart\n                height={600}\n                width={900}\n                containerComponent={\n                <VictoryZoomVoronoiContainer responsive={false}\n                    labels={({datum}) => `Date: ${datum.date}\n                    PercentChange: ${datum.percentChange.toFixed(2)}`}\n                />\n            }>\n                <VictoryAxis tickCount={10} />\n                <VictoryAxis dependentAxis tickCount={5} />\n                <VictoryBar \n                    data={data}\n                    style={{\n                        data: {fill: '#F47E17', stroke: 'white', strokeWidth: 1}\n                    }}\n                    x=\"date\"\n                    y=\"percentChange\"\n                    barRatio={1}\n                />\n            </VictoryChart>\n        </div>\n    )\n}","import React, { useContext } from 'react'\nimport { VictoryChart, VictoryAxis, VictoryLine, VictoryVoronoiContainer, createContainer, VictoryLegend } from 'victory'\nimport { DataContext } from '../data/DataProvider'\nimport { DateContext } from '../data/DateCalculator'\n\nexport const MovingAverageDash = ({country, state, county}) => {\n    const countrySelected = country\n    const stateSelected = state\n    const countySelected = county\n\n    const { timeSeriesGlobal } = useContext(DataContext) || []\n    const {timeSeriesUSA} = useContext(DataContext) || []\n    const {allDateArray} = useContext(DateContext) || []\n\n    let data = [{date:\"1/21/20\", cases: 0}]\n\n    const findData = () => {\n        if(countySelected !== '') {\n            //push county data to data array\n            //loop through time series data and return the object that matches the county\n            const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected) || []\n            const countyObject = countyListArray.find(obj => obj['Admin2'] === countySelected) || {}\n\n            const countyTotalsArray = []\n            //for each day, push the total for that day to the totals array\n            allDateArray.forEach(day => {\n                countyTotalsArray.push(+(countyObject[day]))\n            })\n\n            const dataForThisSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = countyTotalsArray[i]\n                dataForThisSelection.push(obj)\n            })\n\n            data = dataForThisSelection\n        }\n        else if (stateSelected !== '') {\n            //push state/province data to data array\n            if (countrySelected === 'US') {\n                const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected)\n                const stateTotalsArray = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    countyListArray.map(count => {\n                        return total += +(count[date])\n                    })\n                    stateTotalsArray.push(total)\n                }\n\n                const dataForThisSelection = []\n                allDateArray.map(date => totalForDate(date))\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = stateTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n                const provinceObject = provinceListArray.find(obj => obj['Province/State'] === stateSelected)\n\n                const provinceTotalsArray = []\n                allDateArray.forEach(day => {\n                    provinceTotalsArray.push(+(provinceObject[day]))\n                })\n                \n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = provinceTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n\n        }\n        else if (countrySelected !== '') {\n            //push country data to data array\n            const arrayOfCountriesThatBelongToOtherCountries = []\n            timeSeriesGlobal.forEach(place => {\n                if(place['Province/State'] !== '') {\n                    arrayOfCountriesThatBelongToOtherCountries.push(place['Province/State'])\n                }\n            })\n            if (countrySelected === 'Canada' || countrySelected === 'China' || countrySelected === 'Australia') {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n\n                const arrayOfTotalsForEachDay = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    provinceListArray.map(prov => {\n                        return total += +(prov[date]) //<- string converted to number\n                    })\n                    arrayOfTotalsForEachDay.push(total)\n                }\n\n                allDateArray.map(date => totalForDate(date))\n\n                const dataForThisSelection = []\n                \n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = arrayOfTotalsForEachDay[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else if (arrayOfCountriesThatBelongToOtherCountries.includes(countrySelected)){\n                const countryObject = timeSeriesGlobal.find(c => c['Province/State'] === countrySelected)\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const countryObject = timeSeriesGlobal.find(c => c['Country/Region'] === countrySelected) || {}\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n        }\n        else {\n            //push global data to data array\n            const arrayOfTotalsForEachDay = []\n\n            const totalForDate = (date) => {\n                let total = 0\n                timeSeriesGlobal.map(prov => {\n                    return total += +(prov[date]) //<- string converted to number\n                })\n                arrayOfTotalsForEachDay.push(total)\n            }\n\n            allDateArray.map(date => totalForDate(date))\n\n            const dataForNoSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = arrayOfTotalsForEachDay[i]\n                dataForNoSelection.push(obj)\n            })\n\n            data = dataForNoSelection\n        }\n    }\n\n    findData()\n\n    //add newCases and dayNumber properties to each datum object\n    data.forEach((v, i) => {\n        v.dayNumber = i\n        if(i > 0) {\n        const old = data[i-1]\n\n        const newCases = v.cases - old.cases\n        v.newCases = newCases\n        }\n        else {\n            v.newCases = v.cases\n        }\n    })\n\n    //add movingAverage property to each datum object\n    const avg = (values) => {\n        let sum = values.reduce((accumulator, currValue) => {\n            return accumulator + +(currValue)\n        }, 0)\n\n        let avg = sum/values.length\n        return avg\n    }\n\n    const sma = (values, period) => {\n        let sma = values.map((v, i, arr) => {\n            if(i < period) {\n                v = 0\n            }\n            else {\n                v = arr.slice(i - period, i)\n                v = avg(v)\n            }\n\n            data[i].movingAverage = v\n            return v\n        }, 0)\n\n        return sma\n    }\n\n    let newCasesArray = []\n    data.forEach((v) => {\n        newCasesArray.push(v.newCases)\n    })\n    sma(newCasesArray,14)\n\n    const shortenNumber = (n) => {\n        const mToK = n/1000\n        if(mToK >= 1000) {\n            return `${mToK/1000}M`\n        }\n        else {\n            return `${mToK}K`\n        }\n    }\n\n    const formatNumber = (x) => {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }\n\n    const chartHeader = () => {\n        if(countySelected) {\n            return `New Cases: ${countrySelected} - ${stateSelected} - ${countySelected}`\n        }\n        else if(stateSelected) {\n            return `New Cases: ${countrySelected} - ${stateSelected}`\n        }\n        else if(countrySelected) {\n            return `New Cases: ${countrySelected}`\n        }\n        else {\n            return `New Cases: Global`\n        }\n    }\n\n    const chartDescription = () => {\n        const mostRecent = data.slice(-1)[0] || {}\n\n        return(\n            `On ${mostRecent.date} there were ${formatNumber(mostRecent.newCases)} new cases`\n        )\n    }\n\n    const VictoryZoomVoronoiContainer = createContainer('zoom', 'voronoi')\n\n    return (\n        <div className=\"chartContainer\">\n            <div className=\"chartHeader\">{chartHeader()}</div>\n            <div className=\"chartDescription\">{chartDescription()}</div>\n            <VictoryChart\n                className='chart'\n                height={300}\n                width={450}\n                containerComponent={\n                <VictoryZoomVoronoiContainer responsive={false}\n                    zoomDimension='x'\n                    labels={({datum}) => `Date: ${datum.date}\n                    new cases: ${datum.newCases}`}\n                />\n            }>\n                <VictoryAxis tickCount={10} label='days since day 0'/>\n                <VictoryAxis dependentAxis tickCount={5} tickFormat={(n) => shortenNumber(n)} />\n                <VictoryLine \n                    data={data}\n                    style={{\n                        data: {stroke: '#F47E17'}\n                    }}\n                    x=\"dayNumber\"\n                    y=\"newCases\"\n                    barRatio={1}\n                    />\n                <VictoryLine \n                    data={data}\n                    x=\"dayNumber\"\n                    y=\"movingAverage\"\n                    barRatio={1}\n                    />\n                <VictoryLegend colorScale={['#F47E17', 'black']} \n                data={[{name: 'New Cases'}, {name: '14d Moving Average'}]}\n                orientation={\"horizontal\"} />\n            </VictoryChart>\n        </div>\n    )\n}","import React, { useContext, useState, useEffect } from 'react'\nimport { DateContext } from '../data/DateCalculator'\nimport { DataContext } from '../data/DataProvider'\nimport { format } from 'date-fns'\nimport { Table } from 'antd'\n\nconst formatDate = (date) => {\n    return format(new Date(date), 'MM-dd-yyyy')\n}\n\nconst DailyReportDash = ({setActiveView}) => {\n    const { allDateArray } = useContext(DateContext)\n    const { getDailyReport, dailyReport } = useContext(DataContext)\n    const [dateSelected, setDateSelected] = useState(formatDate(allDateArray.slice(-1)[0]))\n    const [options, setOptions] = useState()\n\n    let datesReversed = allDateArray\n\n    useEffect(() => {\n        datesReversed = allDateArray.slice().reverse()\n        setOptions(datesReversed.map((date, i) => {\n            return <option key={i} value={date}>{date}</option>\n        }))\n        getDailyReport(dateSelected)\n    }, [])\n\n    const changeDate = (event) => {\n        const newDate = formatDate(event.target.value)\n        if (newDate !== \"0\") {\n            setDateSelected(newDate)\n        }\n    }\n\n    useEffect(() => {\n        getDailyReport(dateSelected)\n    }, [dateSelected])\n\n    return (\n        <div className='dailyReport'>\n            <div className='dailyText'>U.S. Daily State Report</div>\n            <select onChange={changeDate} className='dailyDropdown'>\n                {options}\n            </select>\n            <Table columns={columns} dataSource={dailyReport} />\n        </div>\n    )\n}\n\nexport default DailyReportDash\n\nconst columns = [\n    {\n        title: 'State',\n        dataIndex: 'Province_State',\n        key: 'state',\n        sorter: (a,b) => {\n            if(a['Province_State'] < b['Province_State']) {\n                return -1\n            }\n            else if (a['Province_State'] > b['Province_State']) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Confirmed',\n        dataIndex: 'Confirmed',\n        key: 'confirmed',\n        sorter: (a,b) => {\n            if(+(a['Confirmed']) < +(b['Confirmed'])) {\n                return -1\n            }\n            else if(+(a['Confirmed']) > +(b['Confirmed'])) {\n                return 1\n            }\n        },\n        defaultSortOrder: 'descend'\n    },\n    {\n        title: 'Active',\n        dataIndex: 'Active',\n        key: 'active',\n        sorter: (a,b) => {\n            if(+(a['Active']) < +(b['Active'])) {\n                return -1\n            }\n            else if(+(a['Active']) > +(b['Active'])) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Deaths',\n        dataIndex: 'Deaths',\n        key: 'deaths',\n        sorter: (a,b) => {\n            if(+(a['Deaths']) < +(b['Deaths'])) {\n                return -1\n            }\n            else if(+(a['Deaths']) > +(b['Deaths'])) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Motality Rate',\n        dataIndex: 'Mortality_Rate',\n        key: 'mortality',\n        sorter: (a,b) => {\n            if(a['Mortality_Rate'] < b['Mortality_Rate']) {\n                return -1\n            }\n            else if (a['Mortality_Rate'] > b['Mortality_Rate']) {\n                return 1\n            }\n        },\n        render: text => Math.round(+(text) *100)/100\n    },\n    {\n        title: 'Incidence Rate',\n        dataIndex: 'Incident_Rate',\n        key: 'incidence',\n        sorter: (a,b) => {\n            if(+(a['Incident_Rate']) < +(b['Incident_Rate'])) {\n                return -1\n            }\n            else if(+(a['Incident_Rate']) > +(b['Incident_Rate'])) {\n                return 1\n            }\n        },\n        render: text => Math.round(+(text) *100)/100\n    },\n    {\n        title: 'People Hospitalized',\n        dataIndex: 'People_Hospitalized',\n        key: 'hospitalized',\n        sorter: (a,b) => {\n            if(+(a['People_Hospitalized']) < +(b['People_Hospitalized'])) {\n                return -1\n            }\n            else if(+(a['People_Hospitalized']) > +(b['People_Hospitalized'])) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Hospitalization Rate',\n        dataIndex: 'Hospitalization_Rate',\n        key: 'hospitalRate',\n        sorter: (a,b) => {\n            if(+(a['Hospitalization_Rate']) < +(b['Hospitalization_Rate'])) {\n                return -1\n            }\n            else if(+(a['Hospitalization_Rate']) > +(b['Hospitalization_Rate'])) {\n                return 1\n            }\n        },\n        render: text => Math.round(+(text) *100)/100\n    },\n    {\n        title: 'People Tested',\n        dataIndex: 'People_Tested',\n        key: 'tested',\n        sorter: (a,b) => {\n            if(+(a['People_Tested']) < +(b['People_Tested'])) {\n                return -1\n            }\n            else if(+(a['People_Tested']) > +(b['People_Tested'])) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Testing Rate',\n        dataIndex: 'Testing_Rate',\n        key: 'testingRate',\n        sorter: (a,b) => {\n            if(+(a['Testing_Rate']) < +(b['Testing_Rate'])) {\n                return -1\n            }\n            else if(+(a['Testing_Rate']) > +(b['Testing_Rate'])) {\n                return 1\n            }\n        },\n        render: text => Math.round(+(text) *100)/100\n    }\n]","import React, { useContext, useState } from 'react'\nimport { WidgetsContext } from '../data/WidgetProvider'\nimport { TotalCasesDash } from '../charts/TotalCasesDash'\nimport { PercentChangeDash } from '../charts/PercentChangeDash'\nimport { MovingAverageDash } from '../charts/MovingAverageDash'\nimport DailyReportDash from '../charts/DailyReportDash'\nimport './Dashboard.css'\n\nconst Dashboard = () => {\n    const { widgets, removeWidget } = useContext(WidgetsContext)\n    const currentUser = +(sessionStorage.getItem(\"user\"))\n    const usersWidgets = widgets.filter(o => o.userId === currentUser)\n\n    const { showDelete } = useContext(WidgetsContext)\n\n    return (\n        <>\n            <div className='dashboard'>\n                {usersWidgets.map((widget) => {\n                    if (widget.statistic === 'totalCases') {\n                        //make a graph with the props country, state, county\n                        return (\n                            <div className=\"widgetContainer\">\n                                {showDelete ? <div className=\"btn btn--delete\" onClick={() => { removeWidget(widget.id) }}>x</div> : ''}\n                                <TotalCasesDash key={widget.id} country={widget.country} state={widget.state} county={widget.county} />\n                            </div>\n                        )\n                    }\n                    else if (widget.statistic === 'percentChange') {\n                        return (\n                            <div className=\"widgetContainer\">\n                                {showDelete ? <div className=\"btn btn--delete\" onClick={() => { removeWidget(widget.id) }}>x</div> : ''}\n                                <PercentChangeDash key={widget.id} country={widget.country} state={widget.state} county={widget.county} />\n                            </div>\n                        )\n                    }\n                    else if (widget.statistic === 'movingAverage') {\n                        return (\n                            <div className=\"widgetContainer\">\n                                {showDelete ? <div className=\"btn btn--delete\" onClick={() => { removeWidget(widget.id) }}>x</div> : ''}\n                                <MovingAverageDash key={widget.id} country={widget.country} state={widget.state} county={widget.county} />\n                            </div>\n                        )\n                    }\n                    else if (widget.statistic = 'dailyReport') {\n                        return (\n                            <div className='widgetContainer'>\n                                {showDelete ? <div className=\"btn btn--delete\" onClick={() => { removeWidget(widget.id) }}>x</div> : ''}\n                                <DailyReportDash key={widget.id} />\n                            </div>\n                        )\n                    }\n                })}\n            </div>\n        </>\n    )\n}\n\nexport default Dashboard","import React, { useContext, useState } from 'react'\nimport { DataContext } from '../data/DataProvider'\nimport { format, subDays } from 'date-fns'\nimport { DateContext } from '../data/DateCalculator'\n\nexport const GlobalTotalByDate = () => {\n    const {timeSeriesGlobal} = useContext(DataContext)\n    const {allDateArray} = useContext(DateContext)\n\n    let arrayOfOptions = []\n\n    const generateOptions = () => {\n        for (const date of allDateArray) {\n            arrayOfOptions.push(\n                <option key={date} value={date}>{date}</option>\n            )\n        }\n    }\n    generateOptions()\n\n    const yesterday = format(subDays(new Date(), 1), \"M/d/yy\")\n    const [selectedDate, setDate] = useState(yesterday)\n\n    const changeDate = (event) => {\n        const newDate = event.target.value\n        if(newDate !== \"0\"){\n        setDate(newDate)\n        }\n    }\n\n    const totalForDate = () => {\n        let total = 0\n        timeSeriesGlobal.map(prov => {\n            return total += +(prov[`${selectedDate}`])\n        })\n        return total\n    }\n\n    return (\n        <div className=\"globalTotalByDate\">\n            <div>Global Total for\n            <select onChange={changeDate}>\n                <option value={yesterday}>{yesterday}</option>\n                {arrayOfOptions}\n            </select>\n            </div>\n            <div>{totalForDate()} Cases</div>\n        </div>\n    )\n}","import React, { useContext, useRef } from 'react'\nimport { DataContext } from '../data/DataProvider'\n\nexport const CountrySelection = ({setCountrySelected, stateSelected, setStateSelected, setCountySelected, countySelected}) => {\n    const { timeSeriesGlobal } = useContext(DataContext)\n\n    //Create an array of the list of all countries\n    const allCountriesArrayWithDuplicates = []\n    timeSeriesGlobal.forEach(place => {\n        if (place['Country/Region'] === 'Australia' || place['Country/Region'] === 'Canada' || place['Country/Region'] === 'China') {\n            allCountriesArrayWithDuplicates.push(place['Country/Region'])\n        }\n        else {\n            if(place['Province/State'] !== ''){\n                allCountriesArrayWithDuplicates.push(place['Province/State'])\n            }\n            else {\n                allCountriesArrayWithDuplicates.push(place['Country/Region'])\n            }\n        }\n    })\n\n    const allCountriesArray = Array.from(new Set(allCountriesArrayWithDuplicates)).sort()\n\n    const country = useRef()\n\n    const handleCountryChange = (event) => {\n        if(stateSelected !== ''){\n            if(countySelected !== '') {\n                setCountySelected('')\n            }\n            setStateSelected('')\n        }\n        setCountrySelected(event.target.value)\n    }\n\n    return(\n        <form>\n            <select\n                defaultValue=''\n                name='Country/Region'\n                ref={country}\n                onChange={handleCountryChange}>\n                    <option value=''>Country/Region</option>\n                    {allCountriesArray.map(country => {\n                        return <option key={country} value={country}>{country}</option>\n                    })}\n            </select>\n        </form>\n    )\n}","import React, { useContext, useRef } from 'react'\nimport { DataContext } from '../data/DataProvider'\n\nexport const StateSelection = ({countrySelected, setStateSelected, setCountySelected, countySelected}) => {\n    const {timeSeriesGlobal} = useContext(DataContext)\n    const {timeSeriesUSA} = useContext(DataContext)\n\n    //display Australia states\n    const australiaStatesArray = []\n    timeSeriesGlobal.forEach(region => {\n        if (region['Country/Region'] === \"Australia\") {\n            australiaStatesArray.push(region['Province/State']\n            )}\n    })\n\n    //display Canada provinces\n    const canadaProvincesArray = []\n    timeSeriesGlobal.forEach(region => {\n        if (region['Country/Region'] === \"Canada\") {\n            canadaProvincesArray.push(region['Province/State'])\n        }\n    })\n    //remove 'recovered' data point\n    const recoveredIndex = canadaProvincesArray.indexOf('Recovered')\n    canadaProvincesArray.splice(recoveredIndex, 1)\n    canadaProvincesArray.sort()\n\n\n    //display China Provinces\n    const chinaProvincesArray = []\n    timeSeriesGlobal.forEach(region => {\n        if (region['Country/Region'] === 'China') {\n            chinaProvincesArray.push(region['Province/State'])\n        }\n    })\n\n    //display US States\n    const usStatesWithDuplicates = []\n    timeSeriesUSA.forEach(state => {\n        usStatesWithDuplicates.push(state['Province_State'])\n    })\n\n    const usaStatesArray = Array.from(new Set(usStatesWithDuplicates)).sort()\n\n    const state = useRef()\n\n    const handleStateChange = (event) => {\n        if(countySelected !== '') {\n            setCountySelected('')\n        }\n        setStateSelected(event.target.value)\n    }\n\n    if(countrySelected === 'Australia') {\n        return (\n            <form>\n                <select\n                    defaultValue=''\n                    name='Province/State'\n                    ref={state}\n                    onChange={handleStateChange}\n                >\n                    <option value=''>State</option>\n                    {australiaStatesArray.map(state => {\n                        return <option key={state} value={state}>{state}</option>\n                    })}\n                </select>\n            </form>\n        )\n    }\n    else if (countrySelected === 'Canada') {\n        return (\n            <form>\n                <select\n                    defaultValue=''\n                    name='Province/State'\n                    ref={state}\n                    onChange={handleStateChange}\n                >\n                    <option value=''>Province</option>\n                    {canadaProvincesArray.map(province => {\n                        return <option key={province} value={province}>{province}</option>\n                    })}\n                </select>\n            </form>\n        )\n    }\n    else if (countrySelected === 'China') {\n        return (\n            <form>\n                <select\n                    defaultValue=''\n                    name='Province/State'\n                    ref={state}\n                    onChange={handleStateChange}\n                >\n                    <option value=''>Province</option>\n                    {chinaProvincesArray.map(province => {\n                        return <option key={province} value={province}>{province}</option>\n                    })}\n                </select>\n            </form>\n        )\n    }\n    else if (countrySelected === 'US') {\n        return (\n            <form>\n                <select\n                    defaultValue=''\n                    name='Province/State'\n                    ref={state}\n                    onChange={handleStateChange}\n                >\n                    <option value=''>State</option>\n                    {usaStatesArray.map(province => {\n                        return <option key={province} value={province}>{province}</option>\n                    })}\n                </select>\n            </form>\n        )\n    }\n    else {\n        return <div></div>\n    }\n}","import React, { useContext, useRef } from 'react'\nimport { DataContext } from '../data/DataProvider'\n\nexport const CountySelection = ({countrySelected, stateSelected, setCountySelected}) => {\n    const {timeSeriesUSA} = useContext(DataContext)\n    const county = useRef()\n\n    const handleCountyChange = (event) => {\n        setCountySelected(event.target.value)\n    }\n    if (countrySelected === 'US' && stateSelected !== '') {\n        const countiesForState = []\n        timeSeriesUSA.forEach(place => {\n            if(place['Province_State'] === stateSelected) {\n                countiesForState.push(place['Admin2'])\n            }\n        })\n        return (\n            <form>\n                <select\n                    defaultValue=''\n                    name='County'\n                    ref={county}\n                    onChange={handleCountyChange}\n                >\n                    <option value=''>County</option>\n                    {countiesForState.map(county => {\n                        return <option key={county} value={county}>{county}</option>\n                    })}\n                </select>\n            </form>\n        )\n    }\n    else {\n        return <div></div>\n    }\n}","import React from 'react'\nimport { CountrySelection } from '../selection/CountrySelection'\nimport { StateSelection } from '../selection/StateSelection'\nimport { CountySelection } from '../selection/CountySelection'\n\nexport const AllSelections = (props) => (\n    <div>\n        <CountrySelection \n            setCountrySelected={props.setCountrySelected}\n            stateSelected={props.stateSelected} setStateSelected={props.setStateSelected}\n            countySelected={props.countySelected} setCountySelected={props.setCountySelected}/>\n        <StateSelection \n            countrySelected={props.countrySelected}\n            setStateSelected={props.setStateSelected}\n            countySelected={props.countySelected} setCountySelected={props.setCountySelected}/>\n        <CountySelection \n            countrySelected={props.countrySelected}\n            stateSelected={props.stateSelected}\n            setCountySelected={props.setCountySelected}/>\n    </div>\n)","import React, { useState, useContext } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, createContainer } from 'victory'\nimport { AllSelections } from '../selection/AllSelections'\nimport { DataContext } from '../data/DataProvider'\nimport { DateContext } from '../data/DateCalculator'\nimport { WidgetsContext } from '../data/WidgetProvider'\n\nexport const TotalCasesSelect = ({setActiveView}) => {\n    const {addWidget} = useContext(WidgetsContext)\n    const [countrySelected, setCountrySelected] = useState('')\n    const [stateSelected, setStateSelected] = useState('')\n    const [countySelected, setCountySelected] = useState('')\n\n    const { timeSeriesGlobal } = useContext(DataContext)\n    const {timeSeriesUSA} = useContext(DataContext)\n    const {allDateArray} = useContext(DateContext)\n\n    const makeNewWidget = () => {\n        const widget = {\n            userId: +(sessionStorage.getItem(\"user\")),\n            graph: \"barGraph\",\n            statistic: \"totalCases\",\n            country: countrySelected,\n            state: stateSelected,\n            county: countySelected\n        }\n\n        addWidget(widget)\n        setActiveView('dashboard')\n    }\n\n    let data = [{date:\"1/21/20\", cases: 0}]\n\n    const findData = () => {\n        if(countySelected !== '') {\n            //push county data to data array\n            //loop through time series data and return the object that matches the county\n            const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected)\n            const countyObject = countyListArray.find(obj => obj['Admin2'] === countySelected)\n\n            const countyTotalsArray = []\n            //for each day, push the total for that day to the totals array\n            allDateArray.forEach(day => {\n                countyTotalsArray.push(+(countyObject[day]))\n            })\n\n            const dataForThisSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = countyTotalsArray[i]\n                dataForThisSelection.push(obj)\n            })\n\n            data = dataForThisSelection\n        }\n        else if (stateSelected !== '') {\n            //push state/province data to data array\n            if (countrySelected === 'US') {\n                const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected)\n                const stateTotalsArray = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    countyListArray.map(count => {\n                        return total += +(count[date])\n                    })\n                    stateTotalsArray.push(total)\n                }\n\n                const dataForThisSelection = []\n                allDateArray.map(date => totalForDate(date))\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = stateTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n                const provinceObject = provinceListArray.find(obj => obj['Province/State'] === stateSelected)\n\n                const provinceTotalsArray = []\n                allDateArray.forEach(day => {\n                    provinceTotalsArray.push(+(provinceObject[day]))\n                })\n                \n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = provinceTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n\n        }\n        else if (countrySelected !== '') {\n            //push country data to data array\n            const arrayOfCountriesThatBelongToOtherCountries = []\n            timeSeriesGlobal.forEach(place => {\n                if(place['Province/State'] !== '') {\n                    arrayOfCountriesThatBelongToOtherCountries.push(place['Province/State'])\n                }\n            })\n            if (countrySelected === 'Canada' || countrySelected === 'China' || countrySelected === 'Australia') {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n\n                const arrayOfTotalsForEachDay = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    provinceListArray.map(prov => {\n                        return total += +(prov[date]) //<- string converted to number\n                    })\n                    arrayOfTotalsForEachDay.push(total)\n                }\n\n                allDateArray.map(date => totalForDate(date))\n\n                const dataForThisSelection = []\n                \n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = arrayOfTotalsForEachDay[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else if (arrayOfCountriesThatBelongToOtherCountries.includes(countrySelected)){\n                const countryObject = timeSeriesGlobal.find(c => c['Province/State'] === countrySelected)\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const countryObject = timeSeriesGlobal.find(c => c['Country/Region'] === countrySelected)\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n        }\n        else {\n            //push global data to data array\n            const arrayOfTotalsForEachDay = []\n\n            const totalForDate = (date) => {\n                let total = 0\n                timeSeriesGlobal.map(prov => {\n                    return total += +(prov[date]) //<- string converted to number\n                })\n                arrayOfTotalsForEachDay.push(total)\n            }\n\n            allDateArray.map(date => totalForDate(date))\n\n            const dataForNoSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = arrayOfTotalsForEachDay[i]\n                dataForNoSelection.push(obj)\n            })\n\n            data = dataForNoSelection\n        }\n    }\n\n    findData()\n\n    const formatNumber = (x) => {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }\n\n    const VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\")\n\n    const shortenNumber = (n) => {\n        const mToK = n/1000\n        if(mToK >= 1000) {\n            return `${mToK/1000}M`\n        }\n        else {\n            return `${mToK}K`\n        }\n    }\n\n    const chartHeader = () => {\n        if(countySelected) {\n            return `Confirmed Cases: ${countrySelected} - ${stateSelected} - ${countySelected}`\n        }\n        else if(stateSelected) {\n            return `Confirmed Cases: ${countrySelected} - ${stateSelected}`\n        }\n        else if(countrySelected) {\n            return `Confirmed Cases: ${countrySelected}`\n        }\n        else {\n            return `Confirmed Cases: Global`\n        }\n    }\n\n    const chartDescription = () => {\n        const mostRecent = data.slice(-1)[0] || {}\n        return(\n            `As of ${mostRecent.date} there are ${mostRecent.cases ? formatNumber(mostRecent.cases) : ''} cases`\n        )\n    }\n\n\n    return (\n        <div className=\"chart--select\">\n            <div className=\"chartHeader\">{chartHeader()}</div>\n            <div className=\"chartDescription\">{chartDescription()}</div>\n            <div className=\"btn--addChart\" onClick={makeNewWidget}>Add Chart</div>\n            <AllSelections \n                countrySelected={countrySelected} setCountrySelected={setCountrySelected}\n                stateSelected={stateSelected} setStateSelected={setStateSelected}\n                countySelected={countySelected} setCountySelected={setCountySelected}\n            />\n\n            <VictoryChart\n                height={600}\n                width={900}\n                containerComponent={\n                <VictoryZoomVoronoiContainer responsive={false}\n                    labels={({datum}) => `Date: ${datum.date}\n                    cases: ${datum.cases}`}\n                />\n            }>\n                <VictoryAxis tickCount={10} />\n                <VictoryAxis dependentAxis tickCount={5} tickFormat={(n) => shortenNumber(n)} />\n                <VictoryBar \n                    data={data}\n                    style={{\n                        data: {fill: '#F47E17', stroke: 'white', strokeWidth: 1}\n                    }}\n                    x=\"date\"\n                    y=\"cases\"\n                    barRatio={1}\n                    />\n            </VictoryChart>\n        </div>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { VictoryBar, VictoryChart, VictoryAxis, createContainer } from 'victory'\nimport { AllSelections } from '../selection/AllSelections'\nimport { DataContext } from '../data/DataProvider'\nimport { DateContext } from '../data/DateCalculator'\nimport { WidgetsContext } from '../data/WidgetProvider'\n\nexport const PercentChangeSelect = ({setActiveView}) => {\n    const {addWidget} = useContext(WidgetsContext)\n    const [countrySelected, setCountrySelected] = useState('')\n    const [stateSelected, setStateSelected] = useState('')\n    const [countySelected, setCountySelected] = useState('')\n\n    const { timeSeriesGlobal } = useContext(DataContext)\n    const {timeSeriesUSA} = useContext(DataContext)\n    const {allDateArray} = useContext(DateContext)\n\n    const makeNewWidget = () => {\n        const widget = {\n            userId: +(sessionStorage.getItem(\"user\")),\n            graph: \"barGraph\",\n            statistic: \"percentChange\",\n            country: countrySelected,\n            state: stateSelected,\n            county: countySelected\n        }\n\n        addWidget(widget)\n        setActiveView('dashboard')\n    }\n\n    let data = [{date:\"1/21/20\", cases: 0}]\n\n    const findData = () => {\n        if(countySelected !== '') {\n            //push county data to data array\n            //loop through time series data and return the object that matches the county\n            const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected)\n            const countyObject = countyListArray.find(obj => obj['Admin2'] === countySelected)\n\n            const countyTotalsArray = []\n            //for each day, push the total for that day to the totals array\n            allDateArray.forEach(day => {\n                countyTotalsArray.push(+(countyObject[day]))\n            })\n\n            const dataForThisSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = countyTotalsArray[i]\n                dataForThisSelection.push(obj)\n            })\n\n            data = dataForThisSelection\n        }\n        else if (stateSelected !== '') {\n            //push state/province data to data array\n            if (countrySelected === 'US') {\n                const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected)\n                const stateTotalsArray = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    countyListArray.map(count => {\n                        return total += +(count[date])\n                    })\n                    stateTotalsArray.push(total)\n                }\n\n                const dataForThisSelection = []\n                allDateArray.map(date => totalForDate(date))\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = stateTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n                const provinceObject = provinceListArray.find(obj => obj['Province/State'] === stateSelected)\n\n                const provinceTotalsArray = []\n                allDateArray.forEach(day => {\n                    provinceTotalsArray.push(+(provinceObject[day]))\n                })\n                \n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = provinceTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n\n        }\n        else if (countrySelected !== '') {\n            //push country data to data array\n            const arrayOfCountriesThatBelongToOtherCountries = []\n            timeSeriesGlobal.forEach(place => {\n                if(place['Province/State'] !== '') {\n                    arrayOfCountriesThatBelongToOtherCountries.push(place['Province/State'])\n                }\n            })\n            if (countrySelected === 'Canada' || countrySelected === 'China' || countrySelected === 'Australia') {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n\n                const arrayOfTotalsForEachDay = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    provinceListArray.map(prov => {\n                        return total += +(prov[date]) //<- string converted to number\n                    })\n                    arrayOfTotalsForEachDay.push(total)\n                }\n\n                allDateArray.map(date => totalForDate(date))\n\n                const dataForThisSelection = []\n                \n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = arrayOfTotalsForEachDay[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else if (arrayOfCountriesThatBelongToOtherCountries.includes(countrySelected)){\n                const countryObject = timeSeriesGlobal.find(c => c['Province/State'] === countrySelected)\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const countryObject = timeSeriesGlobal.find(c => c['Country/Region'] === countrySelected)\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n        }\n        else {\n            //push global data to data array\n            const arrayOfTotalsForEachDay = []\n\n            const totalForDate = (date) => {\n                let total = 0\n                timeSeriesGlobal.map(prov => {\n                    return total += +(prov[date]) //<- string converted to number\n                })\n                arrayOfTotalsForEachDay.push(total)\n            }\n\n            allDateArray.map(date => totalForDate(date))\n\n            const dataForNoSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = arrayOfTotalsForEachDay[i]\n                dataForNoSelection.push(obj)\n            })\n\n            data = dataForNoSelection\n        }\n    }\n\n    findData()\n\n    //data => %change\n    data.forEach((v, i) => {\n        if(i > 0) {\n        const old = data[i-1]\n\n        const change = v.cases - old.cases\n            if(change === 0) {\n                v.percentChange = 0\n            }\n            else if (old.cases === 0) {\n                v.percentChange = 0\n            }\n            else {\n                const percentChange = (change/(Math.abs(old.cases)) * 100)\n                v.percentChange = percentChange\n        }\n        }\n        else {\n            v.percentChange = 0\n        }\n    })\n\n     //add newCases and dayNumber properties to each datum object\n     data.forEach((v, i) => {\n        v.dayNumber = i\n        if(i > 0) {\n        const old = data[i-1]\n\n        const newCases = v.cases - old.cases\n        v.newCases = newCases\n        }\n        else {\n            v.newCases = v.cases\n        }\n    })\n\n    const VictoryZoomVoronoiContainer = createContainer(\"zoom\", \"voronoi\")\n\n    const chartHeader = () => {\n        if(countySelected) {\n            return `% Change: ${countrySelected} - ${stateSelected} - ${countySelected}`\n        }\n        else if(stateSelected) {\n            return `% Change: ${countrySelected} - ${stateSelected}`\n        }\n        else if(countrySelected) {\n            return `% Change: ${countrySelected}`\n        }\n        else {\n            return `% Change: Global`\n        }\n    }\n\n    return (\n        <div className=\"Chart\">\n            <div className=\"chartHeader\">{chartHeader()}</div>\n            <div className=\"btn--addChart\" onClick={makeNewWidget}>Add Chart</div>\n            <AllSelections \n                countrySelected={countrySelected} setCountrySelected={setCountrySelected}\n                stateSelected={stateSelected} setStateSelected={setStateSelected}\n                countySelected={countySelected} setCountySelected={setCountySelected}\n            />\n\n            <VictoryChart\n                height={600}\n                width={900}\n                containerComponent={\n                <VictoryZoomVoronoiContainer responsive={false}\n                    labels={({datum}) => `Date: ${datum.date}\n                    PercentChange: ${datum.percentChange.toFixed(2)}`}\n                />\n            }>\n                <VictoryAxis tickCount={10} />\n                <VictoryAxis dependentAxis tickCount={5} />\n                <VictoryBar \n                    data={data}\n                    style={{\n                        data: {fill: '#F47E17', stroke: 'white', strokeWidth: 1}\n                    }}\n                    x=\"date\"\n                    y=\"percentChange\"\n                    barRatio={1}\n                />\n            </VictoryChart>\n        </div>\n    )\n}","import React, { useState, useContext } from 'react'\nimport { VictoryChart, VictoryAxis, VictoryLine, VictoryVoronoiContainer } from 'victory'\nimport { AllSelections } from '../selection/AllSelections'\nimport { DataContext } from '../data/DataProvider'\nimport { DateContext } from '../data/DateCalculator'\nimport { WidgetsContext } from '../data/WidgetProvider'\n\nexport const MovingAverageSelect = ({setActiveView}) => {\n    const {addWidget} = useContext(WidgetsContext)\n    const [countrySelected, setCountrySelected] = useState('')\n    const [stateSelected, setStateSelected] = useState('')\n    const [countySelected, setCountySelected] = useState('')\n\n    const { timeSeriesGlobal } = useContext(DataContext)\n    const {timeSeriesUSA} = useContext(DataContext)\n    const {allDateArray} = useContext(DateContext)\n\n    const makeNewWidget = () => {\n        const widget = {\n            userId: +(sessionStorage.getItem(\"user\")),\n            graph: \"lineGraph\",\n            statistic: \"movingAverage\",\n            country: countrySelected,\n            state: stateSelected,\n            county: countySelected\n        }\n\n        addWidget(widget)\n        setActiveView('dashboard')\n    }\n\n    let data = [{date:\"1/21/20\", cases: 0}]\n\n    const findData = () => {\n        if(countySelected !== '') {\n            //push county data to data array\n            //loop through time series data and return the object that matches the county\n            const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected)\n            const countyObject = countyListArray.find(obj => obj['Admin2'] === countySelected)\n\n            const countyTotalsArray = []\n            //for each day, push the total for that day to the totals array\n            allDateArray.forEach(day => {\n                countyTotalsArray.push(+(countyObject[day]))\n            })\n\n            const dataForThisSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = countyTotalsArray[i]\n                dataForThisSelection.push(obj)\n            })\n\n            data = dataForThisSelection\n        }\n        else if (stateSelected !== '') {\n            //push state/province data to data array\n            if (countrySelected === 'US') {\n                const countyListArray = timeSeriesUSA.filter(obj => obj['Province_State'] === stateSelected)\n                const stateTotalsArray = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    countyListArray.map(count => {\n                        return total += +(count[date])\n                    })\n                    stateTotalsArray.push(total)\n                }\n\n                const dataForThisSelection = []\n                allDateArray.map(date => totalForDate(date))\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = stateTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n                const provinceObject = provinceListArray.find(obj => obj['Province/State'] === stateSelected)\n\n                const provinceTotalsArray = []\n                allDateArray.forEach(day => {\n                    provinceTotalsArray.push(+(provinceObject[day]))\n                })\n                \n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = provinceTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n\n        }\n        else if (countrySelected !== '') {\n            //push country data to data array\n            const arrayOfCountriesThatBelongToOtherCountries = []\n            timeSeriesGlobal.forEach(place => {\n                if(place['Province/State'] !== '') {\n                    arrayOfCountriesThatBelongToOtherCountries.push(place['Province/State'])\n                }\n            })\n            if (countrySelected === 'Canada' || countrySelected === 'China' || countrySelected === 'Australia') {\n                const provinceListArray = timeSeriesGlobal.filter(obj => obj['Country/Region'] === countrySelected)\n\n                const arrayOfTotalsForEachDay = []\n\n                const totalForDate = (date) => {\n                    let total = 0\n                    provinceListArray.map(prov => {\n                        return total += +(prov[date]) //<- string converted to number\n                    })\n                    arrayOfTotalsForEachDay.push(total)\n                }\n\n                allDateArray.map(date => totalForDate(date))\n\n                const dataForThisSelection = []\n                \n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = arrayOfTotalsForEachDay[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else if (arrayOfCountriesThatBelongToOtherCountries.includes(countrySelected)){\n                const countryObject = timeSeriesGlobal.find(c => c['Province/State'] === countrySelected)\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n            else {\n                const countryObject = timeSeriesGlobal.find(c => c['Country/Region'] === countrySelected)\n\n                const countryTotalsArray = []\n                allDateArray.forEach(day => {\n                    countryTotalsArray.push(+(countryObject[day]))\n                })\n\n                const dataForThisSelection = []\n\n                allDateArray.forEach((v,i) => {\n                    const obj = {}\n                    obj.date = v\n                    obj.cases = countryTotalsArray[i]\n                    dataForThisSelection.push(obj)\n                })\n\n                data = dataForThisSelection\n            }\n        }\n        else {\n            //push global data to data array\n            const arrayOfTotalsForEachDay = []\n\n            const totalForDate = (date) => {\n                let total = 0\n                timeSeriesGlobal.map(prov => {\n                    return total += +(prov[date]) //<- string converted to number\n                })\n                arrayOfTotalsForEachDay.push(total)\n            }\n\n            allDateArray.map(date => totalForDate(date))\n\n            const dataForNoSelection = []\n\n            allDateArray.forEach((v,i) => {\n                const obj = {}\n                obj.date = v\n                obj.cases = arrayOfTotalsForEachDay[i]\n                dataForNoSelection.push(obj)\n            })\n\n            data = dataForNoSelection\n        }\n    }\n\n    findData()\n\n    //add newCases and dayNumber properties to each datum object\n    data.forEach((v, i) => {\n        v.dayNumber = i\n        if(i > 0) {\n        const old = data[i-1]\n\n        const newCases = v.cases - old.cases\n        v.newCases = newCases\n        }\n        else {\n            v.newCases = v.cases\n        }\n    })\n\n    //add movingAverage property to each datum object\n    const avg = (values) => {\n        let sum = values.reduce((accumulator, currValue) => {\n            return accumulator + +(currValue)\n        }, 0)\n\n        let avg = sum/values.length\n        return avg\n    }\n\n    const sma = (values, period) => {\n        let sma = values.map((v, i, arr) => {\n            if(i < period) {\n                v = 0\n            }\n            else {\n                v = arr.slice(i - period, i)\n                v = avg(v)\n            }\n\n            data[i].movingAverage = v\n            return v\n        }, 0)\n\n        return sma\n    }\n\n    let newCasesArray = []\n    data.forEach((v) => {\n        newCasesArray.push(v.newCases)\n    })\n    sma(newCasesArray,14)\n\n    const shortenNumber = (n) => {\n        const mToK = n/1000\n        if(mToK >= 1000) {\n            return `${mToK/1000}M`\n        }\n        else {\n            return `${mToK}K`\n        }\n    }\n\n    const formatNumber = (x) => {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    }\n\n    const chartHeader = () => {\n        if(countySelected) {\n            return `New Cases: ${countrySelected} - ${stateSelected} - ${countySelected}`\n        }\n        else if(stateSelected) {\n            return `New Cases: ${countrySelected} - ${stateSelected}`\n        }\n        else if(countrySelected) {\n            return `New Cases: ${countrySelected}`\n        }\n        else {\n            return `New Cases: Global`\n        }\n    }\n\n    const chartDescription = () => {\n        const mostRecent = data.slice(-1)[0] || {}\n\n        return(\n            `On ${mostRecent.date} there were ${formatNumber(mostRecent.newCases)} new cases`\n        )\n    }\n\n    return (\n        <div className=\"Chart\">\n            <div className=\"chartHeader\">{chartHeader()}</div>\n            <div className=\"chartDescription\">{chartDescription()}</div>\n            <div className=\"btn--addChart\" onClick={makeNewWidget}>Add Chart</div>\n            <AllSelections \n                countrySelected={countrySelected} setCountrySelected={setCountrySelected}\n                stateSelected={stateSelected} setStateSelected={setStateSelected}\n                countySelected={countySelected} setCountySelected={setCountySelected}\n            />\n\n            <VictoryChart\n                height={600}\n                width={900}\n                containerComponent={\n                <VictoryVoronoiContainer responsive={false}\n                    labels={({datum}) => `Date: ${datum.date}\n                    new cases: ${datum.newCases}`}\n                />\n            }>\n                <VictoryAxis tickCount={10} />\n                <VictoryAxis dependentAxis tickCount={5} tickFormat={(n) => shortenNumber(n)} />\n                <VictoryLine \n                    data={data}\n                    style={{\n                        data: {stroke: '#F47E17'}\n                    }}\n                    x=\"dayNumber\"\n                    y=\"newCases\"\n                    barRatio={1}\n                    />\n                <VictoryLine \n                    data={data}\n                    x=\"dayNumber\"\n                    y=\"movingAverage\"\n                    barRatio={1}\n                    />\n            </VictoryChart>\n        </div>\n    )\n}","import React, { useContext, useState, useEffect } from 'react'\nimport { DateContext } from '../data/DateCalculator'\nimport { DataContext } from '../data/DataProvider'\nimport { WidgetsContext } from '../data/WidgetProvider'\nimport { format } from 'date-fns'\nimport { Table } from 'antd'\n\nconst formatDate = (date) => {\n    return format(new Date(date), 'MM-dd-yyyy')\n}\n\nconst DailyReport = ({setActiveView}) => {\n    const { allDateArray } = useContext(DateContext)\n    const { getDailyReport, dailyReport } = useContext(DataContext)\n    const { addWidget } = useContext(WidgetsContext)\n    const [dateSelected, setDateSelected] = useState(formatDate(allDateArray.slice(-1)[0]))\n    const [options, setOptions] = useState()\n\n    let datesReversed = allDateArray\n\n    useEffect(() => {\n        datesReversed = allDateArray.slice().reverse()\n        setOptions(datesReversed.map((date, i) => {\n            return <option key={i} value={date}>{date}</option>\n        }))\n        getDailyReport(dateSelected)\n    }, [])\n\n    const changeDate = (event) => {\n        const newDate = formatDate(event.target.value)\n        if (newDate !== \"0\") {\n            setDateSelected(newDate)\n        }\n    }\n\n    useEffect(() => {\n        getDailyReport(dateSelected)\n    }, [dateSelected])\n\n\n    const makeNewWidget = () => {\n        const widget = {\n            userId: +(sessionStorage.getItem(\"user\")),\n            graph: \"dailyReport\",\n            statistic: \"dailyReport\",\n            country: '',\n            state: '',\n            county: ''\n        }\n\n        addWidget(widget)\n        setActiveView('dashboard')\n    }\n\n    return (\n        <div>\n            <div className=\"btn--addChart\" onClick={makeNewWidget}>Add Chart</div>\n            <select onChange={changeDate}>\n                {options}\n            </select>\n            <Table columns={columns} dataSource={dailyReport} />\n        </div>\n    )\n}\n\nexport default DailyReport\n\nconst columns = [\n    {\n        title: 'State',\n        dataIndex: 'Province_State',\n        key: 'state',\n        sorter: (a,b) => {\n            if(a['Province_State'] < b['Province_State']) {\n                return -1\n            }\n            else if (a['Province_State'] > b['Province_State']) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Confirmed',\n        dataIndex: 'Confirmed',\n        key: 'confirmed',\n        sorter: (a,b) => {\n            if(+(a['Confirmed']) < +(b['Confirmed'])) {\n                return -1\n            }\n            else if(+(a['Confirmed']) > +(b['Confirmed'])) {\n                return 1\n            }\n        },\n        defaultSortOrder: 'descend'\n    },\n    {\n        title: 'Active',\n        dataIndex: 'Active',\n        key: 'active',\n        sorter: (a,b) => {\n            if(+(a['Active']) < +(b['Active'])) {\n                return -1\n            }\n            else if(+(a['Active']) > +(b['Active'])) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Deaths',\n        dataIndex: 'Deaths',\n        key: 'deaths',\n        sorter: (a,b) => {\n            if(+(a['Deaths']) < +(b['Deaths'])) {\n                return -1\n            }\n            else if(+(a['Deaths']) > +(b['Deaths'])) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Motality Rate',\n        dataIndex: 'Mortality_Rate',\n        key: 'mortality',\n        sorter: (a,b) => {\n            if(a['Mortality_Rate'] < b['Mortality_Rate']) {\n                return -1\n            }\n            else if (a['Mortality_Rate'] > b['Mortality_Rate']) {\n                return 1\n            }\n        },\n        render: text => Math.round(+(text) *100)/100\n    },\n    {\n        title: 'Incidence Rate',\n        dataIndex: 'Incident_Rate',\n        key: 'incidence',\n        sorter: (a,b) => {\n            if(+(a['Incident_Rate']) < +(b['Incident_Rate'])) {\n                return -1\n            }\n            else if(+(a['Incident_Rate']) > +(b['Incident_Rate'])) {\n                return 1\n            }\n        },\n        render: text => Math.round(+(text) *100)/100\n    },\n    {\n        title: 'People Hospitalized',\n        dataIndex: 'People_Hospitalized',\n        key: 'hospitalized',\n        sorter: (a,b) => {\n            if(+(a['People_Hospitalized']) < +(b['People_Hospitalized'])) {\n                return -1\n            }\n            else if(+(a['People_Hospitalized']) > +(b['People_Hospitalized'])) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Hospitalization Rate',\n        dataIndex: 'Hospitalization_Rate',\n        key: 'hospitalRate',\n        sorter: (a,b) => {\n            if(+(a['Hospitalization_Rate']) < +(b['Hospitalization_Rate'])) {\n                return -1\n            }\n            else if(+(a['Hospitalization_Rate']) > +(b['Hospitalization_Rate'])) {\n                return 1\n            }\n        },\n        render: text => Math.round(+(text) *100)/100\n    },\n    {\n        title: 'People Tested',\n        dataIndex: 'People_Tested',\n        key: 'tested',\n        sorter: (a,b) => {\n            if(+(a['People_Tested']) < +(b['People_Tested'])) {\n                return -1\n            }\n            else if(+(a['People_Tested']) > +(b['People_Tested'])) {\n                return 1\n            }\n        }\n    },\n    {\n        title: 'Testing Rate',\n        dataIndex: 'Testing_Rate',\n        key: 'testingRate',\n        sorter: (a,b) => {\n            if(+(a['Testing_Rate']) < +(b['Testing_Rate'])) {\n                return -1\n            }\n            else if(+(a['Testing_Rate']) > +(b['Testing_Rate'])) {\n                return 1\n            }\n        },\n        render: text => Math.round(+(text) *100)/100\n    }\n]","import React, { useState, useEffect } from 'react'\nimport { Menu } from 'antd'\nimport 'antd/dist/antd.css'\nimport { GlobalTotalByDate } from './GlobalTotalByDate'\nimport { TotalCasesSelect } from './TotalCasesSelect'\nimport { PercentChangeSelect } from './PercentChangeSelect'\nimport { MovingAverageSelect } from './MovingAverageSelect'\nimport DailyReport from './DailyReport'\nimport './Charts.css'\n\n\nconst ChartList = ({ setActiveView }) => {\n    const [page, setPage] = useState(1)\n    const [components, setComponents] = useState()\n\n    const showGlobalTotalByDate = (\n        <div className=\"globalTotal\">\n            <GlobalTotalByDate />\n        </div>\n    )\n\n    const showTotalCasesSelect = (\n        <div className=\"selectableGraph\">\n            <TotalCasesSelect setActiveView={setActiveView} />\n        </div>\n    )\n\n    const showPercentChangeSelect = (\n        <div className=\"percentChangeGraph\">\n            <PercentChangeSelect setActiveView={setActiveView} />\n        </div>\n    )\n\n    const showMovingAverageSelect = (\n        <div className=\"movingAverageGraph\">\n            <MovingAverageSelect setActiveView={setActiveView} />\n        </div>\n    )\n\n    const showDailyReport = (\n        <div className='dailyReportTable'>\n            <DailyReport setActiveView={setActiveView}/>\n        </div>\n    )\n\n    useEffect(() => {\n        if (page === 0) {\n            setComponents(showGlobalTotalByDate)\n        }\n        else if (page === 1) {\n            setComponents(showTotalCasesSelect)\n        }\n        else if (page === 2) {\n            setComponents(showPercentChangeSelect)\n        }\n        else if (page === 3) {\n            setComponents(showMovingAverageSelect)\n        }\n        else if (page === 4) {\n            setComponents(showDailyReport)\n        }\n    }, [page])\n\n    return (\n        <div className=\"chartListContainer\">\n            <Menu mode='horizontal' className='chartMenu'>\n                <Menu.Item key={1} onClick={() => setPage(1)}>Confirmed Cases</Menu.Item>\n                <Menu.Item key={2} onClick={() => setPage(2)}>% Change in Total Confirmed</Menu.Item>\n                <Menu.Item key={3} onClick={() => setPage(3)}>New Cases</Menu.Item>\n                <Menu.Item key={4} onClick={() => setPage(4)}>US State Report</Menu.Item>\n            </Menu>\n            {components}\n        </div>\n    )\n}\n\nexport default ChartList\n\n","import React, { useContext, useEffect } from 'react'\nimport keplerGLReducer from 'kepler.gl/reducers'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { taskMiddleware } from 'react-palm/tasks'\nimport { Provider, useDispatch } from 'react-redux'\nimport KeplerGl from 'kepler.gl'\nimport { addDataToMap } from 'kepler.gl/actions'\nimport { JSONContext } from './JSONConverter'\n\nconst reducers = combineReducers({\n  keplerGl: keplerGLReducer\n})\n\nconst store = createStore(reducers, {}, applyMiddleware(taskMiddleware))\n\nconst GlobalMap = () => {\n  return (\n    <Provider store={store}>\n      <Map />\n    </Provider>)\n}\n\nexport default GlobalMap\n\nconst Map = (props) => {\n  const dispatch = useDispatch()\n  const { globalData, start, end } = useContext(JSONContext)\n  useEffect(() => {\n    if (globalData) {\n      dispatch(\n        addDataToMap({\n          datasets: {\n            info: {\n              label: 'COVID-19 Global',\n              id: 'covid19_global'\n            },\n            data: globalData\n          },\n          option: {\n            centerMap: false,\n            readOnly: true\n          },\n          config: config\n        })\n      )\n    }\n  }, [dispatch, globalData])\n\n  const config =\n  {\n    \"version\": \"v1\",\n    \"config\": {\n      \"visState\": {\n        \"filters\": [\n          {\n            \"dataId\": [\n              \"covid19_global\"\n            ],\n            \"id\": \"i8mx62ht9\",\n            \"name\": [\n              \"day\"\n            ],\n            \"type\": \"timeRange\",\n            \"value\": [\n              start,\n              end\n            ],\n            \"enlarged\": true,\n            \"plotType\": \"histogram\",\n            \"yAxis\": null\n          }\n        ],\n        \"layers\": [\n          {\n            \"id\": \"kwf57su\",\n            \"type\": \"point\",\n            \"config\": {\n              \"dataId\": \"covid19_global\",\n              \"label\": \"Point\",\n              \"color\": [\n                254,\n                137,\n                26\n              ],\n              \"columns\": {\n                \"lat\": \"latitude\",\n                \"lng\": \"longitude\",\n                \"altitude\": null\n              },\n              \"isVisible\": true,\n              \"visConfig\": {\n                \"radius\": 10,\n                \"fixedRadius\": false,\n                \"opacity\": 0.25,\n                \"outline\": false,\n                \"thickness\": 2,\n                \"strokeColor\": null,\n                \"colorRange\": {\n                  \"name\": \"Global Warming\",\n                  \"type\": \"sequential\",\n                  \"category\": \"Uber\",\n                  \"colors\": [\n                    \"#5A1846\",\n                    \"#900C3F\",\n                    \"#C70039\",\n                    \"#E3611C\",\n                    \"#F1920E\",\n                    \"#FFC300\"\n                  ]\n                },\n                \"strokeColorRange\": {\n                  \"name\": \"Global Warming\",\n                  \"type\": \"sequential\",\n                  \"category\": \"Uber\",\n                  \"colors\": [\n                    \"#5A1846\",\n                    \"#900C3F\",\n                    \"#C70039\",\n                    \"#E3611C\",\n                    \"#F1920E\",\n                    \"#FFC300\"\n                  ]\n                },\n                \"radiusRange\": [\n                  0,\n                  300.8\n                ],\n                \"filled\": true\n              },\n              \"textLabel\": [\n                {\n                  \"field\": null,\n                  \"color\": [\n                    255,\n                    255,\n                    255\n                  ],\n                  \"size\": 18,\n                  \"offset\": [\n                    0,\n                    0\n                  ],\n                  \"anchor\": \"start\",\n                  \"alignment\": \"center\"\n                }\n              ]\n            },\n            \"visualChannels\": {\n              \"colorField\": null,\n              \"colorScale\": \"quantile\",\n              \"strokeColorField\": null,\n              \"strokeColorScale\": \"quantile\",\n              \"sizeField\": {\n                \"name\": \"count\",\n                \"type\": \"integer\"\n              },\n              \"sizeScale\": \"sqrt\"\n            }\n          }\n        ],\n        \"interactionConfig\": {\n          \"tooltip\": {\n            \"fieldsToShow\": {\n              \"covid19_global\": [\n                \"country\",\n                \"state\",\n                \"day\",\n                \"count\"\n              ]\n            },\n            \"enabled\": true\n          },\n          \"brush\": {\n            \"size\": 0.5,\n            \"enabled\": false\n          },\n          \"coordinate\": {\n            \"enabled\": false\n          }\n        },\n        \"layerBlending\": \"normal\",\n        \"splitMaps\": [],\n        \"animationConfig\": {\n          \"currentTime\": null,\n          \"speed\": 1\n        }\n      },\n      \"mapState\": {\n        \"bearing\": 0,\n        \"dragRotate\": false,\n        \"latitude\": 2.315941617980199,\n        \"longitude\": 5.2051821656763035,\n        \"pitch\": 0,\n        \"zoom\": 1.1428929297940322,\n        \"isSplit\": false\n      },\n      \"mapStyle\": {\n        \"styleType\": \"muted\",\n        \"topLayerGroups\": {},\n        \"visibleLayerGroups\": {\n          \"label\": true,\n          \"road\": true,\n          \"border\": false,\n          \"building\": true,\n          \"water\": true,\n          \"land\": true,\n          \"3d building\": false\n        },\n        \"threeDBuildingColor\": [\n          224.4071295378559,\n          224.4071295378559,\n          224.4071295378559\n        ],\n        \"mapStyles\": {}\n      }\n    }\n  }\n\n  return <KeplerGl id='covid' mapboxApiAccessToken='pk.eyJ1IjoicGFya2VyaG9kZ2UiLCJhIjoiY2thMmtwYnlkMDc1bTNmbmR3bHcxaHdweCJ9.igAic2Z7pSjJUmtuulWnWA'\n    width={window.innerWidth} height={window.innerHeight} />\n}","import React, { useContext, useEffect } from 'react'\nimport keplerGLReducer from 'kepler.gl/reducers'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { taskMiddleware } from 'react-palm/tasks'\nimport { Provider, useDispatch } from 'react-redux'\nimport KeplerGl from 'kepler.gl'\nimport { addDataToMap } from 'kepler.gl/actions'\nimport { JSONContext } from './JSONConverter'\n\nconst reducers = combineReducers({\n    keplerGl: keplerGLReducer\n})\n\nconst store = createStore(reducers, {}, applyMiddleware(taskMiddleware))\n\nconst USAMap = () => {\n    return (\n        <Provider store={store}>\n            <Map />\n        </Provider>)\n}\n\nexport default USAMap\n\nconst Map = (props) => {\n    const dispatch = useDispatch()\n    const { USAData } = useContext(JSONContext)\n    console.log(USAData)\n    \n    useEffect(() => {\n        if (USAData) {\n            dispatch(\n                addDataToMap({\n                    datasets: {\n                        info: {\n                            label: 'COVID-19 USA',\n                            id: 'covid19_usa'\n                        },\n                        data: USAData\n                    },\n                    option: {\n                        centerMap: true,\n                        readOnly: true\n                    },\n                    config: config\n                })\n            )\n        }\n    }, [dispatch, USAData])\n\n    return <KeplerGl id='usa' mapboxApiAccessToken='pk.eyJ1IjoicGFya2VyaG9kZ2UiLCJhIjoiY2thMmtwYnlkMDc1bTNmbmR3bHcxaHdweCJ9.igAic2Z7pSjJUmtuulWnWA'\n        width={window.innerWidth} height={window.innerHeight} />\n}\n\nconst config =\n{\n    \"version\": \"v1\",\n    \"config\": {\n      \"visState\": {\n        \"filters\": [],\n        \"layers\": [\n          {\n            \"id\": \"4p47zds\",\n            \"type\": \"point\",\n            \"config\": {\n              \"dataId\": \"covid19_usa\",\n              \"label\": \"Point\",\n              \"color\": [\n                254,\n                137,\n                26\n              ],\n              \"columns\": {\n                \"lat\": \"latitude\",\n                \"lng\": \"longitude\",\n                \"altitude\": null\n              },\n              \"isVisible\": true,\n              \"visConfig\": {\n                \"radius\": 10,\n                \"fixedRadius\": false,\n                \"opacity\": 0.25,\n                \"outline\": false,\n                \"thickness\": 2,\n                \"strokeColor\": null,\n                \"colorRange\": {\n                  \"name\": \"Global Warming\",\n                  \"type\": \"sequential\",\n                  \"category\": \"Uber\",\n                  \"colors\": [\n                    \"#5A1846\",\n                    \"#900C3F\",\n                    \"#C70039\",\n                    \"#E3611C\",\n                    \"#F1920E\",\n                    \"#FFC300\"\n                  ]\n                },\n                \"strokeColorRange\": {\n                  \"name\": \"Global Warming\",\n                  \"type\": \"sequential\",\n                  \"category\": \"Uber\",\n                  \"colors\": [\n                    \"#5A1846\",\n                    \"#900C3F\",\n                    \"#C70039\",\n                    \"#E3611C\",\n                    \"#F1920E\",\n                    \"#FFC300\"\n                  ]\n                },\n                \"radiusRange\": [\n                  3,\n                  300\n                ],\n                \"filled\": true\n              },\n              \"textLabel\": [\n                {\n                  \"field\": null,\n                  \"color\": [\n                    255,\n                    255,\n                    255\n                  ],\n                  \"size\": 18,\n                  \"offset\": [\n                    0,\n                    0\n                  ],\n                  \"anchor\": \"start\",\n                  \"alignment\": \"center\"\n                }\n              ]\n            },\n            \"visualChannels\": {\n              \"colorField\": null,\n              \"colorScale\": \"quantile\",\n              \"strokeColorField\": null,\n              \"strokeColorScale\": \"quantile\",\n              \"sizeField\": {\n                \"name\": \"count\",\n                \"type\": \"integer\"\n              },\n              \"sizeScale\": \"sqrt\"\n            }\n          }\n        ],\n        \"interactionConfig\": {\n          \"tooltip\": {\n            \"fieldsToShow\": {\n              \"covid19_usa\": [\n                \"state\",\n                \"county\",\n                \"day\",\n                \"count\"\n              ]\n            },\n            \"enabled\": true\n          },\n          \"brush\": {\n            \"size\": 0.5,\n            \"enabled\": false\n          },\n          \"coordinate\": {\n            \"enabled\": false\n          }\n        },\n        \"layerBlending\": \"normal\",\n        \"splitMaps\": [],\n        \"animationConfig\": {\n          \"currentTime\": null,\n          \"speed\": 1\n        }\n      },\n      \"mapState\": {\n        \"bearing\": 0,\n        \"dragRotate\": false,\n        \"latitude\": 39.98558602934307,\n        \"longitude\": -105.72024322700521,\n        \"pitch\": 0,\n        \"zoom\": 3.7637563807923944,\n        \"isSplit\": false\n      },\n      \"mapStyle\": {\n        \"styleType\": \"light\",\n        \"topLayerGroups\": {},\n        \"visibleLayerGroups\": {\n          \"label\": true,\n          \"road\": true,\n          \"border\": false,\n          \"building\": true,\n          \"water\": true,\n          \"land\": true,\n          \"3d building\": false\n        },\n        \"threeDBuildingColor\": [\n          218.82023004728686,\n          223.47597962276103,\n          223.47597962276103\n        ],\n        \"mapStyles\": {}\n      }\n    }\n  }","import React, { useState, useEffect } from 'react'\nimport GlobalMap from './GlobalMap'\nimport USAMap from './USMap'\nimport { Menu } from 'antd'\nimport 'antd/dist/antd.css'\nimport './map.css'\n\nexport const MapList = () => {\n    const [map, setMap] = useState(0)\n    const [components, setComponents] = useState()\n\n    const showWorld = (<GlobalMap />)\n    const showUS = (<USAMap />)\n\n    useEffect(() => {\n        if(map === 0) {\n            setComponents(showWorld)\n        }\n        else if (map === 1) {\n            setComponents(showUS)\n        }\n    }, [map])\n\n    return (\n        <div className='mapContainer'>\n            <Menu mode='horizontal' className='mapMenu'>\n                <Menu.Item key={0} onClick={() => setMap(0)}>World Map</Menu.Item>\n                <Menu.Item key={1} onClick={() => setMap(1)}>US Map</Menu.Item>\n            </Menu>\n            <div className='map'>\n            {components}\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from 'react'\nimport { Auth } from './components/login/Auth'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ChartList from './components/charts/ChartList'\nimport './MainContent.css'\nimport { MapList } from './components/map/MapList'\n\nconst MainContent = ({activeView, setActiveView}) => {\n    const [check, update] = useState(false)\n    const toggleLogin = () => update(!check)\n\n    const [components, setComponents] = useState()\n\n    const showDashboard = () => (\n        <div className='mainContentContainer' >\n        <Dashboard />\n        </div>\n    )\n\n    const showCharts = () => (\n        <div className='mainContentContainer'>\n            <ChartList setActiveView={setActiveView}/>\n        </div>\n    )\n\n    const showMaps = () => (\n        <div className='mainContentContainer'>\n            <MapList />\n        </div>\n    )\n\n    const showAuth = () => (\n        <Auth toggleLogin={toggleLogin} />\n    )\n\n    useEffect(() => {\n        if(check) {\n            setActiveView('dashboard')\n        }\n    }, [check])\n\n        useEffect(() => {\n            if(activeView === 'dashboard') {\n                setComponents(showDashboard)\n            }\n            else if (activeView === 'charts') {\n                setComponents(showCharts)\n            }\n            else if (activeView === 'maps') {\n                setComponents(showMaps)\n            }\n            else if (activeView === 'login') {\n                setComponents(showAuth)\n            }\n        }, [activeView])\n        \n        return(\n            <>\n                {components}\n            </>\n        )\n}\n\nexport default MainContent","import React, { useState, useEffect } from 'react'\nimport TopNav from \"./components/navigation/TopNav\";\nimport LeftNav from './components/navigation/LeftNav';\nimport './ApplicationView.css'\nimport MainContent from './MainContentView';\nimport { WidgetProvider } from './components/data/WidgetProvider';\nimport { DateProvider } from './components/data/DateCalculator';\nimport { DataProvider } from './components/data/DataProvider';\nimport { CreateJSON } from './components/map/JSONConverter';\nimport 'antd/dist/antd.css'\n\nconst ApplicationView = () => {\n    const [showLeftNav, setShowLeftNav] = useState(false)\n    const [activeView, setActiveView] = useState('login')\n\n    useEffect(() => {\n        if(sessionStorage.getItem('user')) {\n            setActiveView('dashboard')\n        }\n    }, [])\n    \n    const toggleNav = () => {\n        if (sessionStorage.getItem(\"user\")) {\n            setShowLeftNav(!showLeftNav)\n        }\n    }\n\n    return (\n        <>\n        <DataProvider>\n        <DateProvider>\n        <WidgetProvider>\n        <CreateJSON>\n            {activeView !== 'login' ? <TopNav toggleNav={toggleNav} activeView={activeView} /> : ''}\n\n            <div className=\"main\">\n                {showLeftNav ? <LeftNav setActiveView={setActiveView} toggleNav={toggleNav} /> : <div></div>}\n                <MainContent activeView={activeView} leftNav={showLeftNav}\n                    setActiveView={setActiveView}/>\n            </div>\n        </CreateJSON>\n        </WidgetProvider>\n        </DateProvider>\n        </DataProvider>\n         </>\n        )\n}\n\nexport default ApplicationView","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport ApplicationView from './ApplicationView';\n\nReactDOM.render(\n<ApplicationView className=\"container\" />, document.getElementById('root')\n);\n"],"sourceRoot":""}